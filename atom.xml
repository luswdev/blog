<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HackTech</title>
  
  <subtitle>Embedded × RTOS × Firmware</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.lusw.dev/"/>
  <updated>2022-04-18T03:35:11.480Z</updated>
  <id>https://blog.lusw.dev/</id>
  
  <author>
    <name>LuSkywalker</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在 Linux 新增一個 Service</title>
    <link href="https://blog.lusw.dev/posts/linux/add-system-service.html"/>
    <id>https://blog.lusw.dev/posts/linux/add-system-service.html</id>
    <published>2022-04-16T03:11:17.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="建立-Unit-檔案">建立 Unit 檔案<a class="header-anchor" href="#建立-Unit-檔案">#</a></h2><p>首先建立一個 system service unit 檔案，格式如下</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=service discription</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=execute path/<span class="built_in">command</span></span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></tbody></table></figure><p>並存放於 <code>/usr/lib/systemd/system/service-name.service</code>（自行修改 service name）</p><ul><li><code>ExecStart</code> 為該執行的程式或是指令，如 <code>php /path/to/main.php</code></li><li>如果有需要先執行的指令，可以使用 <code>ExecStartPre</code>，如 <code>ExecStartPre=mkdir /path/to/log/</code></li><li>如果有需要<strong>後</strong>執行的指令，可以使用 <code>ExecStartPost</code>，如 <code>ExecStartPost=rm /path/to/some.txt</code></li></ul><h2 id="安裝-service">安裝 service<a class="header-anchor" href="#安裝-service">#</a></h2><p>安裝的意思為，為 service 設定權限，在何種開機模式下會自動執行，如上述範例為 multi-user，其餘各種開機模式可見<a href="https://blog.lusw.dev/posts/linux/init-number.html">此篇</a></p><ul><li>指令</li></ul><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">systemctl install service-name.service</span><br></pre></td></tr></tbody></table></figure><ul><li>也可以先執行確認結果</li></ul><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">systemctl start service-name.service</span><br></pre></td></tr></tbody></table></figure><h2 id="確認-Log">確認 Log<a class="header-anchor" href="#確認-Log">#</a></h2><p>若是要確認 system service 的 log，則需要使用 journald 這個 service</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">journalctl -fu service-name</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;建立-Unit-檔案&quot;&gt;建立 Unit 檔案&lt;a class=&quot;h
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/tags/Linux/"/>
    
      <category term="systemctl" scheme="https://blog.lusw.dev/tags/systemctl/"/>
    
      <category term="journalctl" scheme="https://blog.lusw.dev/tags/journalctl/"/>
    
      <category term="systemd" scheme="https://blog.lusw.dev/tags/systemd/"/>
    
      <category term="journald" scheme="https://blog.lusw.dev/tags/journald/"/>
    
  </entry>
  
  <entry>
    <title>透過 SplatNet APIs 獲取遊戲紀錄</title>
    <link href="https://blog.lusw.dev/posts/splatnet-api.html"/>
    <id>https://blog.lusw.dev/posts/splatnet-api.html</id>
    <published>2022-04-10T02:07:22.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="SplatNet-Cookies">SplatNet Cookies<a class="header-anchor" href="#SplatNet-Cookies">#</a></h2><p>要透過 SplatNet APIs 獲取遊戲紀錄的話，首先必須要登入帳號，並取得 cookies。一個比較簡單快速的方式是透過 <a href="https://github.com/frozenpandaman/splatnet2statink" target="_blank" rel="noopener">splatnet2statink</a> 這個 repo 來取得。</p><h3 id="splatnet2statink">splatnet2statink<a class="header-anchor" href="#splatnet2statink">#</a></h3><p>Clone 下來後執行：</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">python3 splatnet2statink.py -M 100</span><br></pre></td></tr></tbody></table></figure><p>上述的指令是每 150 秒獲取一次資料，在第一次執行的時候會首先要你登入，並產生 cookies。我們可以利用此 repo 產生的 cookies 來認證。</p><ul><li>登入完後開啟 <em>config.txt</em>，並存下 cookies</li></ul><figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"api_key"</span>: <span class="string">"your_key"</span>,</span><br><span class="line">    <span class="attr">"cookie"</span>: <span class="string">"your_cookie"</span>,</span><br><span class="line">    <span class="attr">"session_token"</span>: <span class="string">"your_token"</span>,</span><br><span class="line">    <span class="attr">"user_lang"</span>: <span class="string">"en-US"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="APIs">APIs<a class="header-anchor" href="#APIs">#</a></h2><p>下述為 SplatNet APIs 的清單：</p><ul><li><a href="https://github.com/msruback/MoNet2/wiki/Splatnet-2-API" target="_blank" rel="noopener">SplatNet APIs</a></li><li>常使用到的如下<ul><li><code>/api/results</code> 獲取近 50 場紀錄</li><li><code>/api/records</code> 獲取用戶統計數據</li><li><code>/api/nickname_and_icon?id=your_id</code> 獲取用戶名及頭像</li><li><code>/api/records/hero</code> 獲取英雄模式紀錄</li></ul></li></ul><h3 id="Request">Request<a class="header-anchor" href="#Request">#</a></h3><p>要使用 APIs 需要在 header 帶入 cookies，格式為 <code>iksm_session=api_cookie</code></p><ul><li>完整 header 參考下表（以 PHP cURL lib 展示）</li></ul><figure class="highlight php line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">curl_setopt_array($ch, <span class="keyword">array</span> (</span><br><span class="line">    CURLOPT_HEADER          =&gt;  <span class="number">0</span>,</span><br><span class="line">    CURLOPT_RETURNTRANSFER  =&gt;  <span class="keyword">true</span>,</span><br><span class="line">    CURLOPT_COOKIE          =&gt; <span class="string">'iksm_session='</span> . $api_cookie,</span><br><span class="line">    CURLOPT_HTTPHEADER      =&gt; <span class="keyword">array</span> (</span><br><span class="line">        <span class="string">'Host'</span>              =&gt; <span class="string">'app.splatoon2.nintendo.net'</span>,</span><br><span class="line">        <span class="string">'x-unique-id'</span>       =&gt; $app_unique_id,</span><br><span class="line">        <span class="string">'x-requested-with'</span>  =&gt; <span class="string">'XMLHttpRequest'</span>,</span><br><span class="line">        <span class="string">'x-timezone-offset'</span> =&gt; strval($app_timezone_offset),</span><br><span class="line">        <span class="string">'User-Agent'</span>        =&gt; $app_user_agent,</span><br><span class="line">        <span class="string">'Accept'</span>            =&gt; <span class="string">'*/*'</span>,</span><br><span class="line">        <span class="string">'Referer'</span>           =&gt; <span class="string">'https://app.splatoon2.nintendo.net/home'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>   =&gt; <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>   =&gt; $user_lang,</span><br><span class="line">    )</span><br><span class="line">));</span><br></pre></td></tr></tbody></table></figure><p>接下來只需連線至 API 網址即可，完整範例可參考 <a href="https://github.com/luswdev/SplatoonBot/blob/master/src/splatnet.php" target="_blank" rel="noopener">GitHub</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;SplatNet-Cookies&quot;&gt;SplatNet Cookie
      
    
    </summary>
    
    
      <category term="Note" scheme="https://blog.lusw.dev/categories/Note/"/>
    
    
      <category term="SplatNet" scheme="https://blog.lusw.dev/tags/SplatNet/"/>
    
      <category term="Nintendo Switch" scheme="https://blog.lusw.dev/tags/Nintendo-Switch/"/>
    
      <category term="Splatoon 2" scheme="https://blog.lusw.dev/tags/Splatoon-2/"/>
    
  </entry>
  
  <entry>
    <title>Apache 將網站架設於子目錄</title>
    <link href="https://blog.lusw.dev/posts/linux/apache-upload-in-subdir.html"/>
    <id>https://blog.lusw.dev/posts/linux/apache-upload-in-subdir.html</id>
    <published>2020-09-04T13:11:33.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一般而言，如果要在不同目錄架設網站的話，需要使用 virtual host，但這是在子網域下的設定。</p><figure class="highlight stylus"><table><tbody><tr><td class="code"><pre><span class="line">example.com</span><br><span class="line">sub<span class="selector-class">.example</span><span class="selector-class">.com</span></span><br></pre></td></tr></tbody></table></figure><p>如果我們需要將網站建立在子目錄而不將網頁資料放在同一個資料夾裡呢？</p><figure class="highlight maxima"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">example</span>.com</span><br><span class="line"><span class="built_in">example</span>.com/sub/</span><br></pre></td></tr></tbody></table></figure><h2 id="a2ensite">a2ensite<a class="header-anchor" href="#a2ensite">#</a></h2><p>首先建立一個 apache site config，名字取名跟網站相關及可，放置於 <code>/etc/apache2/site-available/</code>。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo touch /etc/apache2/site-available/example.conf</span><br></pre></td></tr></tbody></table></figure><p>接著輸入以下指令啟用設定欓</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">a2ensite example.conf</span><br></pre></td></tr></tbody></table></figure><h2 id="conf">.conf<a class="header-anchor" href="#conf">#</a></h2><p>下一步是撰寫設定欓</p><figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">Alias</span> /example /path/to/source</span><br><span class="line"><span class="section">&lt;Directory /path/to/source&gt;</span></span><br><span class="line">        <span class="attribute"><span class="nomarkup">Order</span></span> allow,deny</span><br><span class="line">        <span class="attribute"><span class="nomarkup">allow</span></span> from <span class="literal">all</span></span><br><span class="line">        <span class="attribute">Allowoverride</span> <span class="literal">All</span></span><br><span class="line"><span class="section">&lt;/Directory&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>如此一來，此資源將會被導向 <code>/example</code></p><h3 id="重啟">重啟<a class="header-anchor" href="#重啟">#</a></h3><p>最後請重啟 apache</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo service apache2 restart</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;一般而言，如果要在不同目錄架設網站的話，需要使用 virtual host，
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/tags/Linux/"/>
    
      <category term="Apache" scheme="https://blog.lusw.dev/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>BMP (Bitmap) 檔案格式</title>
    <link href="https://blog.lusw.dev/posts/bitmap-file-structure.html"/>
    <id>https://blog.lusw.dev/posts/bitmap-file-structure.html</id>
    <published>2020-09-01T02:37:48.000Z</published>
    <updated>2022-04-18T03:35:11.476Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>點陣圖（<code>.bmp</code>）是 windows 使用的圖像格式，整個檔案由四個部分組成：<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[點陣圖（Bitmap）檔案格式 @ 瘋小貓的華麗冒險](https://crazycat1130.pixnet.net/blog/post/1345538)">[1]</span></a></sup></p><ul><li>Bitmap File Header</li><li>Bitmap Info Header</li><li>Color Table (Palette)</li><li>Bitmap Array</li></ul><h2 id="1-Bitmap-File-Header">1. Bitmap File Header<a class="header-anchor" href="#1-Bitmap-File-Header">#</a></h2><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>Start</th><th>Name</th><th>Size (Byte)</th><th>Content</th></tr></thead><tbody><tr><td>0x0000</td><td>ID</td><td>2</td><td>“BM”</td></tr><tr><td>0x0002</td><td>File Size</td><td>4</td><td>Total file size</td></tr><tr><td>0x0004</td><td>Reserved</td><td>4</td><td>Reserved</td></tr><tr><td>0x000A</td><td>Bitmap Data Offset</td><td>4</td><td>BMP offset</td></tr></tbody></table></div><ul><li>ID 欄位為識別碼，對應以下值：<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[BMP - 維基百科，自由的百科全書](https://zh.wikipedia.org/wiki/BMP)">[2]</span></a></sup><ul><li>BM – Windows 3.1x, 95, NT, … etc.</li><li>BA – OS/2 struct Bitmap Array</li><li>CI – OS/2 struct Color Icon</li><li>CP – OS/2 const Color Pointer</li><li>IC – OS/2 struct Icon</li><li>PT – OS/2 Pointer</li></ul></li><li>Bitmap Data Offset：點陣圖資料（像素陣列）的位址偏移，也就是起始位址。</li></ul><h2 id="2-Bitmap-Info-Header">2.Bitmap Info Header<a class="header-anchor" href="#2-Bitmap-Info-Header">#</a></h2><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>Start</th><th>Name</th><th>Size (Byte)</th><th>Content</th></tr></thead><tbody><tr><td>0x000E</td><td>Bitmap Header Size</td><td>4</td><td>BIH size</td></tr><tr><td>0x0012</td><td>Width</td><td>4</td><td>BMP width  (pixel)</td></tr><tr><td>0x0016</td><td>Height</td><td>4</td><td>BMP height (pixel)</td></tr><tr><td>0x001A</td><td>Planes</td><td>2</td><td>BMP plane counts</td></tr><tr><td>0x001C</td><td>Bits Per Pixel</td><td>2</td><td>Pixel size</td></tr><tr><td>0x001E</td><td>Compression</td><td>4</td><td>Compression method</td></tr><tr><td>0x0022</td><td>Bitmap Data Size</td><td>4</td><td>BMP data size</td></tr><tr><td>0x0026</td><td>H-Resolution</td><td>4</td><td>Horizontal Resolution</td></tr><tr><td>0x002A</td><td>V-Resolution</td><td>4</td><td>Vertical Resolution</td></tr><tr><td>0x002E</td><td>Used Colors</td><td>4</td><td>Palette colors used</td></tr><tr><td>0x0032</td><td>Important Colors</td><td>4</td><td>Important color count</td></tr></tbody></table></div><ul><li>高度為帶號值<ul><li>若為正數，代表圖為倒向</li><li>若為負數，代表圖為正向 <sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[BMP檔案格式詳解（BMP file format）[圖文解說] - IT閱讀](https://www.itread01.com/content/1549504280.html)">[3]</span></a></sup></li></ul></li><li>Planes 為圖層數，不過永遠設成 1</li><li>Bits/pixel 有 6 種不同方式:<ul><li>1：單色點陣圖（使用 2 色調色盤）</li><li>4：4 位元點陣圖（使用 16 色調色盤）</li><li>8：8 位元點陣圖（使用 256 色調色盤）</li><li>16：16 位元高彩點陣圖（不一定使用調色盤）</li><li>24：24 位元全彩點陣圖（不使用調色盤）</li><li>32：32 位元全彩點陣圖（不一定使用調色盤）</li></ul></li><li>壓縮方式有 4 種<ul><li>0：未壓縮，不使用調色盤</li><li>1：RLE 8-bit/pixel</li><li>2：RLE 4-bit/pixel</li><li>3：Bitfields</li></ul></li></ul><h2 id="3-Palette">3.Palette<a class="header-anchor" href="#3-Palette">#</a></h2><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>Start</th><th>Name</th><th>Size (Byte)</th><th>Content</th></tr></thead><tbody><tr><td>0x0036</td><td>Palette</td><td>N*4</td><td>Palette data</td></tr></tbody></table></div><p>每個索引值表示一個顏色：<code>0x00RRGGBB</code>，最高位保留 0</p><h2 id="4-Bitmap-Array">4.Bitmap Array<a class="header-anchor" href="#4-Bitmap-Array">#</a></h2><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>Start</th><th>Name</th><th>Size (Byte)</th><th>Content</th></tr></thead><tbody><tr><td>-</td><td>Bitmap Data</td><td>-</td><td>BMP data</td></tr></tbody></table></div><p>根據 Height 設定的值不同，掃描的方向也不同；若為正向則為由下到上，反之亦然。而每個掃描列須為<strong>4 Bytes 的倍數</strong>。</p><div id="footnotes"><hr class="block-hr"><div id="footnotelist" class="card card-default"><div class="card-header">Reference</div><ol class="list-group list-group-flush" style="list-style: none; padding-left: 0; margin-left: 0px"><li id="fn:1" class="list-group-item"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: 0px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://crazycat1130.pixnet.net/blog/post/1345538" target="_blank" rel="noopener">點陣圖（Bitmap）檔案格式 @ 瘋小貓的華麗冒險</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2" class="list-group-item"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: 0px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zh.wikipedia.org/wiki/BMP" target="_blank" rel="noopener">BMP - 維基百科，自由的百科全書</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3" class="list-group-item"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: 0px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.itread01.com/content/1549504280.html" target="_blank" rel="noopener">BMP檔案格式詳解（BMP file format）[圖文解說] - IT閱讀</a><a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;點陣圖（&lt;code&gt;.bmp&lt;/code&gt;）是 windows 使用的圖像格
      
    
    </summary>
    
    
      <category term="Note" scheme="https://blog.lusw.dev/categories/Note/"/>
    
    
      <category term="Bitmap" scheme="https://blog.lusw.dev/tags/Bitmap/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 更換時區指令</title>
    <link href="https://blog.lusw.dev/posts/linux/change-timezone.html"/>
    <id>https://blog.lusw.dev/posts/linux/change-timezone.html</id>
    <published>2020-05-07T13:51:50.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Linux 的預設時時區是 <code>UTC</code>，如果在安裝的時候沒有更改，或是租 VPS 的時候就需要手動修改。<br>這裡介紹 Ubuntu 內建的指令 <code>timedatectl</code>。</p><div class="alert alert-info"><p>這是 Ubuntu 的指令，若是你的 Linux 發行版不是 Ubuntu 則不適用。</p></div><h2 id="timedatectl">timedatectl<a class="header-anchor" href="#timedatectl">#</a></h2><p>這是一個可以顯示、設定及修改系統時區的指令。</p><h3 id="顯示所有時區">顯示所有時區<a class="header-anchor" href="#顯示所有時區">#</a></h3><p>可以用 <code>list-timezones</code> 來列出所有時區</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ timedatectl list-timezones</span><br></pre></td></tr></tbody></table></figure><ul><li>結果會像是這樣：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">Aferica/...</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p>可以結合 <code>grep</code> 來搜尋想要的結果，如我們只列出亞洲的：</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ timedatectl list-timezones | grep Asia</span><br></pre></td></tr></tbody></table></figure><h3 id="顯示目前時區">顯示目前時區<a class="header-anchor" href="#顯示目前時區">#</a></h3><p>不加上任何設定即可顯示目前設定的時區</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ timedatectl</span><br></pre></td></tr></tbody></table></figure><ul><li>結果會像是這樣：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">Local time: Thu 2020-05-07 22:08:01 CST</span><br><span class="line">Universal time: Thu 2020-05-07 14:08:01 UST</span><br><span class="line">RTC time: Thu 2020-05-07 22:08:01</span><br><span class="line">Time zone: Asia/Taipei (CST +8000)</span><br><span class="line">System clock synchronized: yes</span><br><span class="line">NTP service: active</span><br><span class="line">RTC <span class="keyword">in</span> <span class="built_in">local</span> TZ: no</span><br></pre></td></tr></tbody></table></figure><p>加上 <code>status</code> 可以顯示設定</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ timedatectl status</span><br></pre></td></tr></tbody></table></figure><ul><li>結果會像是這樣：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">Timezone=Asia/Taipei</span><br><span class="line">LocalRTC=no</span><br><span class="line">CanNTP=yes</span><br><span class="line">NTP=yes</span><br><span class="line">NTPSynchronized=yes</span><br><span class="line">TimeUSec=Thu 2020-05-07 22:08:01 CST</span><br><span class="line">RTCTimeUSec=Thu 2020-05-07 22:08:01 CTS</span><br></pre></td></tr></tbody></table></figure><h3 id="改變時區">改變時區<a class="header-anchor" href="#改變時區">#</a></h3><p>使用 <code>set-timezone</code> 可以修改系統設定的時區</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ timedatectl <span class="built_in">set</span>-timezone Zone</span><br></pre></td></tr></tbody></table></figure><p><code>Zone</code> 需要修改成想要設定的時區，如 <code>Asia/Taipei</code>。</p><p>修改後可以使用 <code>show</code> 來看是否修改成功。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ timedatectl show</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;Linux 的預設時時區是 &lt;code&gt;UTC&lt;/code&gt;，如果在安裝的時
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/tags/Linux/"/>
    
      <category term="timezone" scheme="https://blog.lusw.dev/tags/timezone/"/>
    
      <category term="timedatectl" scheme="https://blog.lusw.dev/tags/timedatectl/"/>
    
  </entry>
  
  <entry>
    <title>STM32 Makefile 專案建置</title>
    <link href="https://blog.lusw.dev/posts/linux/building-stm32-in-makefile.html"/>
    <id>https://blog.lusw.dev/posts/linux/building-stm32-in-makefile.html</id>
    <published>2020-05-02T06:46:29.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="資料夾結構">資料夾結構<a class="header-anchor" href="#資料夾結構">#</a></h2><p>第一步，建立三個資料夾 “System”、“OS” 及 “User”</p><figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- System</span><br><span class="line">|</span><br><span class="line">|-- OS</span><br><span class="line">|</span><br><span class="line">`-- User</span><br></pre></td></tr></tbody></table></figure><ul><li>System 放驅動程式</li><li>OS 就是作業系統（也可不用）</li><li>User 放的是我們的專案</li></ul><p>接著，在每個資料夾底下新增一個 makefile。</p><figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|-- System</span><br><span class="line">|   `-- makefile</span><br><span class="line">|</span><br><span class="line">|-- OS</span><br><span class="line">|   `-- makefile</span><br><span class="line">|</span><br><span class="line">|-- User</span><br><span class="line">|   `-- makefile</span><br><span class="line">|</span><br><span class="line">`-- makefile</span><br></pre></td></tr></tbody></table></figure><p>準備步驟的最後，將所有程式碼正確的擺放。如範例：</p><figure class="highlight gherkin"><table><tbody><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|<span class="string">-- System</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- STM32</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   `-- inc</span></span><br><span class="line">|<span class="string">   </span>|</span><br><span class="line">|<span class="string">   </span>|<span class="string">-- STM32F429</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   `-- inc</span></span><br><span class="line">|<span class="string">   </span>|</span><br><span class="line">|<span class="string">   </span>|<span class="string">-- CMSIS</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   `-- inc</span></span><br><span class="line">|<span class="string">   </span>|</span><br><span class="line">|<span class="string">   `-- makefile</span></span><br><span class="line">|</span><br><span class="line">|<span class="string">-- OS</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- inc</span></span><br><span class="line">|<span class="string">   `-- makefile</span></span><br><span class="line">|</span><br><span class="line">|<span class="string">-- User</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- inc</span></span><br><span class="line">|<span class="string">   `-- makefile</span></span><br><span class="line">|</span><br><span class="line">`-- makefile</span><br></pre></td></tr></tbody></table></figure><div class="alert alert-info"><p>在這個例子，我們在 System 底下放了三個驅動，所以需要將程式碼分成三個資料夾。<br>當然你也可以直接全部放在一起是沒問題的。</p></div><p>最後的最後，別忘了在驅動的底下也加一個 makefile。</p><figure class="highlight gherkin"><table><tbody><tr><td class="code"><pre><span class="line">.</span><br><span class="line">|<span class="string">-- System</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- STM32</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- inc</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   `-- makefile</span></span><br><span class="line">|<span class="string">   </span>|</span><br><span class="line">|<span class="string">   </span>|<span class="string">-- STM32F429</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- inc</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   `-- makefile</span></span><br><span class="line">|<span class="string">   </span>|</span><br><span class="line">|<span class="string">   </span>|<span class="string">-- CMSIS</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- inc</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">   `-- makefile</span></span><br><span class="line">|<span class="string">   </span>|</span><br><span class="line">|<span class="string">   `-- makefile</span></span><br><span class="line">|</span><br><span class="line">|<span class="string">-- OS</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- inc</span></span><br><span class="line">|<span class="string">   `-- makefile</span></span><br><span class="line">|</span><br><span class="line">|<span class="string">-- User</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- src</span></span><br><span class="line">|<span class="string">   </span>|<span class="string">-- inc</span></span><br><span class="line">|<span class="string">   `-- makefile</span></span><br><span class="line">|</span><br><span class="line">`-- makefile</span><br></pre></td></tr></tbody></table></figure><hr><p>下一步，來寫 makefile！</p><h2 id="GCC">GCC<a class="header-anchor" href="#GCC">#</a></h2><p>在所有的 makefile（除了最上層）寫上以下程式碼：</p><figure class="highlight makefile line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">TCPREFIX = arm-none-eabi-</span><br><span class="line">CC       = <span class="variable">$(TCPREFIX)</span>gcc</span><br><span class="line"></span><br><span class="line">CFLAGS = -c -Wall -fno-common -O0 -g -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 --specs=nosys.specs</span><br><span class="line"></span><br><span class="line">INCFLAG =\</span><br><span class="line">-I. \</span><br><span class="line">-Iinc</span><br><span class="line"></span><br><span class="line">CFLAGS  += <span class="variable">$(INCFLAG)</span></span><br><span class="line"></span><br><span class="line">OBJDIR = obj</span><br><span class="line"></span><br><span class="line">OBJS =\</span><br><span class="line"><span class="variable">$(OBJDIR)</span>/src.o </span><br><span class="line"></span><br><span class="line"><span class="section">all: <span class="variable">$(OBJS)</span></span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(OBJDIR)</span>/%.o: src/%.c | <span class="variable">$(OBJDIR)</span></span><br><span class="line">@echo <span class="string">"bulid file: <span class="variable">$&lt;</span>"</span></span><br><span class="line"><span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> -MMD -MF$(@:%.o=%.d) -o <span class="variable">$@</span> <span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(OBJDIR)</span>:</span><br><span class="line">@echo <span class="variable">$(NOW)</span> INFO Make new folder User/<span class="variable">$(OBJDIR)</span>.</span><br><span class="line">mkdir -p <span class="variable">$(OBJDIR)</span></span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">-rm -rf <span class="variable">$(OBJDIR)</span>/*.o </span><br><span class="line">-rm -rf <span class="variable">$(OBJDIR)</span>/*.d</span><br></pre></td></tr></tbody></table></figure><ul><li>使用 <code>arm-none-eabi-gcc</code> 來進行編譯</li><li>為 <code>gcc</code> 加入一些設定，如浮點數處理器。</li><li>接著設定所有需要連結的 object file</li><li>將所有 <code>.c</code> 編譯成 <code>.o</code></li><li>Target <code>all</code> 將會完成編譯所有檔案</li><li>Target <code>clean</code> 可以清理所有 object file</li></ul><p>接著告訴主要的 makefile 要去底下的 makefile 執行編譯</p><figure class="highlight makefile line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">obj:</span></span><br><span class="line"><span class="variable">$(MAKE)</span> all -C System</span><br><span class="line"><span class="variable">$(MAKE)</span> all -C OS</span><br><span class="line"><span class="variable">$(MAKE)</span> all -C User</span><br></pre></td></tr></tbody></table></figure><p><code>-C</code> 意味著要去下層資料夾執行目標，所以第二行等同於：</p><figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line">cd ./System</span><br><span class="line">make all</span><br></pre></td></tr></tbody></table></figure><h3 id="Startup-o">Startup.o<a class="header-anchor" href="#Startup-o">#</a></h3><p>Startup.o 是必須的，把它放在 <code>User</code> 理，但不要放進 <code>src</code>；編譯他的道理是類似的</p><figure class="highlight makefile"><table><tbody><tr><td class="code"><pre><span class="line">OBJS +=\</span><br><span class="line">startup.o</span><br><span class="line"></span><br><span class="line"><span class="section">Startup/startup.o: ./startup.s | <span class="variable">$(OBJDIR)</span></span></span><br><span class="line">@echo <span class="string">"bulid file: <span class="variable">$&lt;</span>"</span></span><br><span class="line"><span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> -MMD -MF$(@:%.o=%.d) -o <span class="variable">$@</span> <span class="variable">$&lt;</span></span><br></pre></td></tr></tbody></table></figure><p>以上建置完成後，能快速的編譯所有程式。接著我們將所有 object file 連結成一個二進位檔。</p><h2 id="G-Linker">G++ (Linker)<a class="header-anchor" href="#G-Linker">#</a></h2><p>連結的動作放在主要的 makefile 中。</p><figure class="highlight makefile line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">TCPREFIX = arm-none-eabi-</span><br><span class="line">LD       = <span class="variable">$(TCPREFIX)</span>g++</span><br><span class="line"></span><br><span class="line">LFLAGS  = -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 -Os -T<span class="variable">$(LDFILE)</span> --specs=nosys.specs</span><br><span class="line">LDFILE  = ./STM32F429ZI_FLASH.ld</span><br><span class="line"></span><br><span class="line">OBJS =\</span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> ./User/obj/*.o)</span> \</span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> ./System/*/obj/*.o)</span> \</span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> ./OS/obj/*.o)</span> \</span><br><span class="line">./User/startup.o</span><br><span class="line"></span><br><span class="line"><span class="section">main.elf: <span class="variable">$(OBJS)</span> <span class="variable">$(LDFILE)</span></span></span><br><span class="line">@echo <span class="string">"link file: <span class="variable">$@</span>"</span></span><br><span class="line"><span class="variable">$(LD)</span> <span class="variable">$(LFLAGS)</span> -o <span class="variable">$@</span> <span class="variable">$(OBJS)</span></span><br></pre></td></tr></tbody></table></figure><ul><li>使用 wildcard 掃描所有 object file</li><li>連結成一個 <code>.elf</code></li></ul><h3 id="Objdump-and-Objcopy">Objdump and Objcopy<a class="header-anchor" href="#Objdump-and-Objcopy">#</a></h3><p>再將 <code>.elf</code> 轉成 <code>.bin</code> 燒錄。</p><figure class="highlight makefile line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">TCPREFIX = arm-none-eabi-</span><br><span class="line">CP       = <span class="variable">$(TCPREFIX)</span>objcopy</span><br><span class="line">OD       = <span class="variable">$(TCPREFIX)</span>objdump</span><br><span class="line"></span><br><span class="line"><span class="section">main.bin: obj main.elf</span></span><br><span class="line">@echo <span class="string">"copy file main.elf"</span></span><br><span class="line"><span class="variable">$(CP)</span> <span class="variable">$(CPFLAGS)</span> main.elf <span class="variable">$@</span></span><br><span class="line"><span class="variable">$(OD)</span> <span class="variable">$(ODFLAGS)</span> main.elf &gt; main.lst</span><br></pre></td></tr></tbody></table></figure><h2 id="Openocd">Openocd<a class="header-anchor" href="#Openocd">#</a></h2><p>最後一件事，燒錄；這裡使用 <a href="http://openocd.org/" target="_blank" rel="noopener">openocd</a>。</p><figure class="highlight makefile line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">run: main.bin</span></span><br><span class="line">@echo <span class="variable">$(YELLOW)</span><span class="string">"Flash <span class="variable">$&lt;</span> into board..."</span><span class="variable">$(RST)</span></span><br><span class="line">openocd -f <span class="variable">$(OCDCFG)</span>  \</span><br><span class="line">-c <span class="string">"init"</span>                   \</span><br><span class="line">            -c <span class="string">"reset init"</span>             \</span><br><span class="line">            -c <span class="string">"stm32f2x unlock 0"</span>      \</span><br><span class="line">            -c <span class="string">"flash probe 0"</span>          \</span><br><span class="line">            -c <span class="string">"flash info 0"</span>           \</span><br><span class="line">            -c <span class="string">"flash write_image erase <span class="variable">$&lt;</span> 0x8000000"</span> \</span><br><span class="line">            -c <span class="string">"reset run"</span> -c shutdown</span><br><span class="line">@echo <span class="variable">$(GREEN)</span><span class="string">"Finish flash <span class="variable">$&lt;</span> into board."</span><span class="variable">$(RST)</span></span><br><span class="line">@echo <span class="string">""</span></span><br></pre></td></tr></tbody></table></figure><h2 id="總結">總結<a class="header-anchor" href="#總結">#</a></h2><p>在主 makefile 寫下以下片段，將所有東西整合吧。</p><figure class="highlight makefile"><table><tbody><tr><td class="code"><pre><span class="line"><span class="section">all: run</span></span><br><span class="line"></span><br><span class="line"><span class="section">build: main.bin</span></span><br></pre></td></tr></tbody></table></figure><p>如此以來，只要下指令 <code>make all</code> 就會將所有該編譯的程式碼編譯完成，連結成一個二進位檔，最後燒盡板子。</p><hr><p>這是我的一個專案建置的範例，可以參考。</p><ul><li><a href="https://github.com/luswdev/GUI-workspace" target="_blank" rel="noopener">GUI Workspace</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;資料夾結構&quot;&gt;資料夾結構&lt;a class=&quot;header-anch
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/tags/Linux/"/>
    
      <category term="STM32" scheme="https://blog.lusw.dev/tags/STM32/"/>
    
      <category term="makefile" scheme="https://blog.lusw.dev/tags/makefile/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Theme Clean Document</title>
    <link href="https://blog.lusw.dev/posts/hexo/theme-clean-doc.html"/>
    <id>https://blog.lusw.dev/posts/hexo/theme-clean-doc.html</id>
    <published>2020-04-29T05:03:03.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote><p>This is a theme base on <a href="https://github.com/klugjo/hexo-theme-clean-blog" target="_blank" rel="noopener">Hexo Clean Blog Theme</a>, and modfy for more feature and coding style.</p></blockquote><div class="alert alert-info"><p>Get theme source on <a href="https://github.com/luswdev/hexo-theme-clean" target="_blank" rel="noopener">github</a></p></div><h2 id="Features">Features<a class="header-anchor" href="#Features">#</a></h2><ul><li>Cover image for posts and pages</li><li>Post toc</li><li>Code syntax highlighting</li><li>MathJax support</li><li>Bootstrap Alert, Card and Label support</li><li>Responsive Images, table and codeblock</li><li>Light Gallery support</li><li>Disqus and Gitalk</li><li>Google Analytics, Busuanzi Statistics and Word counts support</li><li>Tags, Categories and About support</li><li>Pin post at home page support</li><li>Hexo local search</li></ul><h2 id="Installation">Installation<a class="header-anchor" href="#Installation">#</a></h2><ul><li>Clone into your hexo blog directory</li></ul><figure class="highlight crmsh"><table><tbody><tr><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">https</span>://github.com/luswdev/hexo-theme-clean.git themes/clean</span><br></pre></td></tr></tbody></table></figure><p>Then update your blog’s main <code>_config.yml</code> to set the theme to <code>clean</code>:</p><figure class="highlight clean"><table><tbody><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http:<span class="comment">//hexo.io/plugins/</span></span><br><span class="line">## Themes: http:<span class="comment">//hexo.io/themes/</span></span><br><span class="line">theme: clean</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="Configuration">Configuration<a class="header-anchor" href="#Configuration">#</a></h2><h3 id="Top-Left-Label">Top Left Label<a class="header-anchor" href="#Top-Left-Label">#</a></h3><p>The top left label is configured in the theme’s <code>_config.yml</code>. When clicked it will lead to the Home Page.</p><figure class="highlight sas"><table><tbody><tr><td class="code"><pre><span class="line"># <span class="meta">Title</span> <span class="meta">on</span> top left of menu. <span class="meta">Leave</span> empty to use main blog <span class="meta">title</span></span><br><span class="line">menu_title: Configurable <span class="meta">Title</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Home-Page-cover-image">Home Page cover image<a class="header-anchor" href="#Home-Page-cover-image">#</a></h3><p>The Home Page cover is configured in the theme’s <code>_config.yml</code>. It will be the same for all index type pages.</p><figure class="highlight awk"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># URL of the Home page image</span></span><br><span class="line">index_cover: <span class="regexp">/img/</span>home-bg.jpg</span><br></pre></td></tr></tbody></table></figure><h3 id="Favicon-image">Favicon image<a class="header-anchor" href="#Favicon-image">#</a></h3><p>The favicon is configured in the theme’s <code>_config.yml</code>.</p><figure class="highlight awk"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Set your own favicon</span></span><br><span class="line">favicon: <span class="regexp">/img/</span>favicon.png</span><br></pre></td></tr></tbody></table></figure><h3 id="Start-Year">Start Year<a class="header-anchor" href="#Start-Year">#</a></h3><p>This will set archives page button group starting year, if not set, it will start at current year.<br>Also is footer copyright start year, too.</p><figure class="highlight vala"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta"># Site start year</span></span><br><span class="line"><span class="meta"># Default with current year</span></span><br><span class="line">start_year:</span><br></pre></td></tr></tbody></table></figure><h3 id="Google-Analytics">Google Analytics<a class="header-anchor" href="#Google-Analytics">#</a></h3><p>The Google Analytics Tracking ID is configured in the theme’s <code>_config.yml</code>. It allow us to learn about blog visitors.</p><figure class="highlight avrasm"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta"># Google Analytics Tracking ID</span></span><br><span class="line"><span class="symbol">google_analytics:</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Busuanzi">Busuanzi<a class="header-anchor" href="#Busuanzi">#</a></h3><p>The Busuanzi is configured in the theme’s <code>_config.yml</code>. It can record site traffic and visitors count.</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Busuanzi Statistics</span></span><br><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  cdn:</span> <span class="string">//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</span></span><br><span class="line"><span class="attr">  site_views:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  site_visitors:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  post_views:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Social-Account">Social Account<a class="header-anchor" href="#Social-Account">#</a></h3><p>Setup the links to your social pages in the theme’s <code>_config.yml</code>. Links are in the footer.</p><figure class="highlight less"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">footer</span>:</span><br><span class="line">  <span class="attribute">social_link</span>:</span><br><span class="line">    <span class="attribute">twitter_url</span>:</span><br><span class="line">    <span class="attribute">twitter_handle</span>:</span><br><span class="line">    <span class="attribute">facebook_url</span>:</span><br><span class="line">    <span class="attribute">github_url</span>: <span class="attribute">https</span>:<span class="comment">//github.com/luswdev/hexo-theme-clean</span></span><br><span class="line">    <span class="attribute">gitlab_url</span>:</span><br><span class="line">    <span class="attribute">linkedin_url</span>: </span><br><span class="line">    <span class="attribute">mailto</span>:</span><br></pre></td></tr></tbody></table></figure><h3 id="New-Tags-page">New Tags page<a class="header-anchor" href="#New-Tags-page">#</a></h3><blockquote><p>Follow these steps to add a <code>tags</code> page that contains all the tags in your site.</p></blockquote><ul><li>Create a page named <code>tags</code></li></ul><figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new<span class="built_in"> page </span><span class="string">"tags"</span></span><br></pre></td></tr></tbody></table></figure><ul><li>Edit the newly created page and set page type to <code>tags</code> in the front matter.</li></ul><figure class="highlight ada"><table><tbody><tr><td class="code"><pre><span class="line">title: <span class="keyword">All</span> tags</span><br><span class="line"><span class="keyword">type</span>: <span class="string">"tags"</span></span><br></pre></td></tr></tbody></table></figure><ul><li>Add <code>tags</code> to the menu in the theme <code>_config.yml</code>:</li></ul><figure class="highlight dts"><table><tbody><tr><td class="code"><pre><span class="line"><span class="symbol">footer:</span></span><br><span class="line"><span class="symbol">  menu:</span></span><br><span class="line"><span class="symbol">    Home:</span> /</span><br><span class="line"><span class="symbol">    Tags:</span> /tags</span><br></pre></td></tr></tbody></table></figure><h3 id="Categories-page">Categories page<a class="header-anchor" href="#Categories-page">#</a></h3><blockquote><p>Follow these steps to add a <code>categories</code> page that contains all the categories in your site.</p></blockquote><ul><li>Create a page named <code>categories</code></li></ul><figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new<span class="built_in"> page </span><span class="string">"categories"</span></span><br></pre></td></tr></tbody></table></figure><ul><li>Edit the newly created page and set page type to <code>categories</code> in the front matter.</li></ul><figure class="highlight ada"><table><tbody><tr><td class="code"><pre><span class="line">title: <span class="keyword">All</span> categories</span><br><span class="line"><span class="keyword">type</span>: <span class="string">"categories"</span></span><br></pre></td></tr></tbody></table></figure><ul><li>Add <code>Categories</code> to the menu in the theme <code>_config.yml</code>:</li></ul><figure class="highlight dts"><table><tbody><tr><td class="code"><pre><span class="line"><span class="symbol">footer:</span></span><br><span class="line"><span class="symbol">  menu:</span></span><br><span class="line"><span class="symbol">    Home:</span> /</span><br><span class="line"><span class="symbol">    Categories:</span> /categories</span><br></pre></td></tr></tbody></table></figure><h3 id="New-About-page">New About page<a class="header-anchor" href="#New-About-page">#</a></h3><blockquote><p>Follow these steps to add a <code>about</code> page that can write some information about you.</p></blockquote><ul><li>Create a page named <code>about</code></li></ul><figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new<span class="built_in"> page </span><span class="string">"about"</span></span><br></pre></td></tr></tbody></table></figure><ul><li>Edit the newly created page and set page type to <code>about</code> in the front matter.</li></ul><figure class="highlight avrasm"><table><tbody><tr><td class="code"><pre><span class="line"><span class="symbol">title:</span> About</span><br><span class="line"><span class="symbol">type:</span> <span class="string">"about"</span></span><br></pre></td></tr></tbody></table></figure><ul><li>Add <code>About</code> to the menu in the theme <code>_config.yml</code>:</li></ul><figure class="highlight dts"><table><tbody><tr><td class="code"><pre><span class="line"><span class="symbol">footer:</span></span><br><span class="line"><span class="symbol">  menu:</span></span><br><span class="line"><span class="symbol">    Home:</span> /</span><br><span class="line"><span class="symbol">    About:</span> /about</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="Writing">Writing<a class="header-anchor" href="#Writing">#</a></h2><h3 id="Default-post-title">Default post title<a class="header-anchor" href="#Default-post-title">#</a></h3><p>The default post title (used when no title is specified) is configured in the theme’s <code>_config.yml</code>.</p><figure class="highlight avrasm"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta"># Default post title</span></span><br><span class="line"><span class="symbol">default_post_title:</span> Untitled</span><br></pre></td></tr></tbody></table></figure><h3 id="Post-word-count">Post word count<a class="header-anchor" href="#Post-word-count">#</a></h3><p>The post word count can show a post’s word count and read time, you need to install plugin:</p><figure class="highlight stata"><table><tbody><tr><td class="code"><pre><span class="line">npm i --<span class="keyword">save</span> hexo-<span class="built_in">wordcount</span></span><br></pre></td></tr></tbody></table></figure><p>And configured in the theme’s <code>_config.yml</code>.</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Post meta</span></span><br><span class="line"><span class="attr">post_info:</span></span><br><span class="line"><span class="attr">  word_count:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  read_time:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Post’s-Excerpt">Post’s Excerpt<a class="header-anchor" href="#Post’s-Excerpt">#</a></h3><p>This theme does not support traditional excerpts. To show excerpts on the index page, use <code>subtitle</code> in the front-matter:</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Post</span> <span class="string">title</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2007</span><span class="bullet">-08</span><span class="bullet">-05</span> <span class="number">07</span><span class="string">:08:05</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">Standard</span> <span class="string">Excerpts</span> <span class="string">are</span> <span class="string">not</span> <span class="string">supported</span> <span class="string">in</span> <span class="string">Clean</span> <span class="string">Blog</span> <span class="string">but</span> <span class="string">you</span> <span class="string">can</span> <span class="string">use</span> <span class="string">subtitles</span> <span class="string">in</span> <span class="string">the</span> <span class="string">front</span> <span class="string">matter</span> <span class="string">to</span> <span class="string">display</span> <span class="string">text</span> <span class="string">in</span> <span class="string">the</span> <span class="string">index.</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Post’s-Cover-Image">Post’s Cover Image<a class="header-anchor" href="#Post’s-Cover-Image">#</a></h3><p>By default, posts will use the home page cover image. You can specify a custom cover in the front-matter:</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Post</span> <span class="string">title</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2007</span><span class="bullet">-08</span><span class="bullet">-05</span> <span class="number">07</span><span class="string">:08:05</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">/assets/contact-bg.jpg</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Author">Author<a class="header-anchor" href="#Author">#</a></h3><p>The post’s author is specified in the posts front-matter:</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Post</span> <span class="string">title</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2007</span><span class="bullet">-08</span><span class="bullet">-05</span> <span class="number">07</span><span class="string">:08:05</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Klug</span> <span class="string">Jo</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="TOC">TOC<a class="header-anchor" href="#TOC">#</a></h3><p>We implement TOC and back to top on the TOC menu, which is a dropup menu on the bottom right. Enable it in the theme’s <code>_config.yml</code>.</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Enable post toc</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Card-Tag">Card Tag<a class="header-anchor" href="#Card-Tag">#</a></h3><p>You can insert a bs card by using tags, just write something like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">I am a card.</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><div class="card bg-default  my-3"><div class="card-body"><p>I am a card.</p></div></div><h4 id="Card-header">Card header<a class="header-anchor" href="#Card-header">#</a></h4><p>Also you can put some title into header, just write something like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- header --&gt;</span></span></span><br><span class="line"><span class="xml">I am header.</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endheader --&gt;</span></span></span><br><span class="line"><span class="xml">I am a card.</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><div class="card bg-default  my-3"><div class="card-header"><p>I am header.</p></div><div class="card-body"><p>I am a card.</p></div></div><h4 id="Card-footer">Card footer<a class="header-anchor" href="#Card-footer">#</a></h4><p>Also you can put some words into footer, just write something like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">I am a card.</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- footer --&gt;</span></span></span><br><span class="line"><span class="xml">I am footer.</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endfooter --&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><div class="card bg-default  my-3"><div class="card-body"><p>I am a card.</p></div><div class="card-footer"><p>I am footer.</p></div></div><h4 id="Card-style">Card style<a class="header-anchor" href="#Card-style">#</a></h4><p>There have 8 style for card, we have:</p><ul><li>primary, secondary, success, danger, warning, info, light, dark.</li></ul><p>Just put classes into tag like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> success %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">I am success!</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><div class="card bg-success  text-white my-3"><div class="card-body"><p>I am success!</p></div></div><p>You can see all style in <a href="https://getbootstrap.com/docs/4.4/components/card/#background-and-color" target="_blank" rel="noopener">Bootstrap doc</a>.</p><h3 id="Alert-Tag">Alert Tag<a class="header-anchor" href="#Alert-Tag">#</a></h3><p>You can insert a bs alert by using tags, just write something like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">alert</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">I am a alert</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endalert</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><div class="alert alert-secondary"><p>I am a alert</p></div><h4 id="Alert-style">Alert style<a class="header-anchor" href="#Alert-style">#</a></h4><p>There have 8 style for alert, we have:</p><ul><li>primary, secondary, success, danger, warning, info, light, dark.</li></ul><p>Just put classes into tag like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">alert</span> success %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">I am success!</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endalert</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><div class="alert alert-success"><p>I am success!</p></div><p>You can see all style in <a href="https://getbootstrap.com/docs/4.4/components/alerts/#examples" target="_blank" rel="noopener">Bootstrap doc</a>.</p><h3 id="Badge-Tag">Badge Tag<a class="header-anchor" href="#Badge-Tag">#</a></h3><p>You can insert a bs badge by using tags, just write something like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">badge</span> @new! %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><span class="badge badge-secondary">new!</span><h4 id="Badge-style">Badge style<a class="header-anchor" href="#Badge-style">#</a></h4><p>There have 8 style for badge, we have:</p><ul><li>primary, secondary, success, danger, warning, info, light, dark.</li></ul><p>Just put classes into tag like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">badge</span> success @success! %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><span class="badge badge-success">success!</span><p>You can see all style in <a href="https://getbootstrap.com/docs/4.4/components/badge/#contextual-variations" target="_blank" rel="noopener">Bootstrap doc</a>.</p><h3 id="Detail-Tag">Detail Tag<a class="header-anchor" href="#Detail-Tag">#</a></h3><p>We impliment html detail tag into hexo, just write something like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">spoiler</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">Something more information at here!</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endspoiler</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><details class="alert alert-secondary"><summary>Details</summary><p>Something more information at here!</p></details><h4 id="Detail-Title">Detail Title<a class="header-anchor" href="#Detail-Title">#</a></h4><p>You can replace <code>Details</code> title to special you want, just write something like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">spoiler</span> Click Me %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">Something more information at here!</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endspoiler</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><details class="alert alert-secondary"><summary>Click Me</summary><p>Something more information at here!</p></details><h3 id="MathJax">MathJax<a class="header-anchor" href="#MathJax">#</a></h3><p>You can write <code>LaTeX</code> code in <code>Markdown</code> file and render on post. Just enable in the theme’s <code>_config.yml</code>.</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Enable post mathjax</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>And set mathjax to <code>true</code> in the posts front-matter:</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Post</span> <span class="string">title</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2007</span><span class="bullet">-08</span><span class="bullet">-05</span> <span class="number">07</span><span class="string">:08:05</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><p>And so on, you can now write inline <code>LaTeX</code> in post like this:</p><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">$(a + b)^2 = a^2 + 2ab + b^2$</span><br></pre></td></tr></tbody></table></figure><p>$(a + b)^2 = a^2 + 2ab + b^2$</p><p>Or write a <code>LaTeX</code> block in post like this:</p><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin{array}{lll}</span><br><span class="line">(a + b)^2 &amp;=&amp; a^2 + 2ab + b^2 \\\\</span><br><span class="line">(a - b)^2 &amp;=&amp; a^2 - 2ab + b^2</span><br><span class="line">\end{array}</span><br><span class="line">$$</span><br></pre></td></tr></tbody></table></figure><p>$$<br>\begin{array}{lll}<br>(a + b)^2 &amp;=&amp; a^2 + 2ab + b^2 \\<br>(a - b)^2 &amp;=&amp; a^2 - 2ab + b^2<br>\end{array}<br>$$</p><p>For more information, you can see <a href="https://docs.mathjax.org/en/v2.7-latest/index.html" target="_blank" rel="noopener">MathJax Doc</a>.</p><h3 id="Comments">Comments<a class="header-anchor" href="#Comments">#</a></h3><p>The comments provider is specified in the theme’s <code>_config.yml</code>.</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Comments. Choose one by filling up the information</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Disqus comments</span></span><br><span class="line"><span class="attr">  disqus:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    shortname:</span> </span><br><span class="line">  <span class="comment"># Gitalk</span></span><br><span class="line"><span class="attr">  gitalk:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    owner:</span></span><br><span class="line"><span class="attr">    repo:</span></span><br><span class="line"><span class="attr">    oauth:</span></span><br><span class="line"><span class="attr">      accessToken:</span></span><br><span class="line"><span class="attr">      clientId:</span></span><br><span class="line"><span class="attr">      clientSecret:</span></span><br><span class="line"><span class="attr">    admin:</span></span><br></pre></td></tr></tbody></table></figure><p>You can too hide the comment in the posts front-matter:</p><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Post</span> <span class="string">title</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2007</span><span class="bullet">-08</span><span class="bullet">-05</span> <span class="number">07</span><span class="string">:08:05</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">comment:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Post-Font-matter">Post Font-matter<a class="header-anchor" href="#Post-Font-matter">#</a></h2><p>This is all font-matter you can use.</p><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Title</td><td>Filename (posts only)</td></tr><tr><td>subtitle</td><td>Sub Title</td><td>-</td></tr><tr><td>date</td><td>Published date</td><td>File created date</td></tr><tr><td>tags</td><td>Post tags</td><td>-</td></tr><tr><td>category</td><td>Post category</td><td>-</td></tr><tr><td>mathjax</td><td>Use mathjax or not</td><td><code>false</code></td></tr><tr><td>comment</td><td>Show comment field or not</td><td><code>true</code></td></tr><tr><td>cover</td><td>Use special header cover</td><td>-</td></tr><tr><td>pin</td><td>Pin this post on home page</td><td><code>false</code></td></tr></tbody></table></div><h2 id="Custom">Custom<a class="header-anchor" href="#Custom">#</a></h2><p>You can modify your blog yourself by writing <code>custom.styl</code>, it location at</p><figure class="highlight ada"><table><tbody><tr><td class="code"><pre><span class="line">. </span><br><span class="line">`<span class="comment">-- source</span></span><br><span class="line">  `<span class="comment">-- css</span></span><br><span class="line">    `<span class="comment">-- _custom</span></span><br><span class="line">      `<span class="comment">-- custom.styl</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Creator">Creator<a class="header-anchor" href="#Creator">#</a></h2><p>This theme was created by <a href="https://github.com/BlackrockDigital" target="_blank" rel="noopener">Blackrock Digital</a>, adapted for Hexo by <a href="http://www.codeblocq.com/" target="_blank" rel="noopener">Jonathan Klughertz</a> and modfy by <a href="/">LuSkywalker</a></p><h2 id="Version">Version<a class="header-anchor" href="#Version">#</a></h2><ul><li>V1.0.0<ul><li>Base fuction support.</li></ul></li></ul><h2 id="License">License<a class="header-anchor" href="#License">#</a></h2><p>MIT</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;blockquote&gt;
&lt;p&gt;This is a theme base on &lt;
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.lusw.dev/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.lusw.dev/tags/hexo/"/>
    
      <category term="theme-clean" scheme="https://blog.lusw.dev/tags/theme-clean/"/>
    
  </entry>
  
  <entry>
    <title>Add Bootstrap badge Tags into Hexo</title>
    <link href="https://blog.lusw.dev/posts/hexo/add-bs-label.html"/>
    <id>https://blog.lusw.dev/posts/hexo/add-bs-label.html</id>
    <published>2020-04-25T13:35:18.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Boostrap-badge">Boostrap badge<a class="header-anchor" href="#Boostrap-badge">#</a></h2><span class="badge badge-secondary">badge content</span><p>So this is a badge given by <a href="https://getbootstrap.com/docs/4.4/components/badge/" target="_blank" rel="noopener">bootstrap</a>, we can add this into hexo just simply write some <span class="badge badge-warning">HTML</span> like this.</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge badge-secondary"</span>&gt;</span>badge content<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>And yes, this is not like <ins><em>Hexo</em></ins> style, and hardly to modify.<br>So as <a href="/post/hexo/add-bs-card.html">last post</a>, let build a tags to insert a badge.</p><hr><h2 id="Badge-Tags">Badge Tags<a class="header-anchor" href="#Badge-Tags">#</a></h2><h3 id="badge-js">badge.js<a class="header-anchor" href="#badge-js">#</a></h3><p>First things to do, new a file call <em>badge.js</em> and put into <code>scripts</code> directory in current theme’s directory:</p><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> touch /path/to/your/current/theme/dir/script/badge.js</span></span><br></pre></td></tr></tbody></table></figure><div class="alert alert-warning"><p>if <code>scripts</code> directory is not existed, first new a directory.</p><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir /path/to/your/current/theme/dir/script</span></span><br></pre></td></tr></tbody></table></figure></div><p>Then, write down this into lastest javascript file (badge.js).</p><figure class="highlight js line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * badge.js | global hexo script.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Usage:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * {% badge [class]@Text %}</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * [class] : primary | secondary | success | danger | warning | info | light | dark.</span></span><br><span class="line"><span class="comment"> *           If not defined, default class will be selected.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">postBadge</span> (<span class="params">args</span>) </span>{</span><br><span class="line">    args = args.join(<span class="string">' '</span>).split(<span class="string">'@'</span>);</span><br><span class="line">    <span class="keyword">var</span> classes = args[<span class="number">0</span>] || <span class="string">'default'</span>;</span><br><span class="line">    <span class="keyword">var</span> text = args[<span class="number">1</span>] || <span class="string">''</span>;</span><br><span class="line">  </span><br><span class="line">    classes = classes.trim();</span><br><span class="line">    !text &amp;&amp; hexo.log.warn(<span class="string">'badge text must be defined!'</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;span class="badge badge-'</span> + classes + <span class="string">'"&gt;'</span> + text + <span class="string">'&lt;/span&gt;'</span>;</span><br><span class="line">}</span><br><span class="line">  </span><br><span class="line">hexo.extend.tag.register(<span class="string">'badge'</span>, postBadge, { <span class="attr">ends</span>: <span class="literal">false</span> });</span><br></pre></td></tr></tbody></table></figure><p>In line 23, we registed a tag name badge, and next time we write something like below , it will show like bs badge.</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">badge</span> @blah %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><h3 id="Different">Different<a class="header-anchor" href="#Different">#</a></h3><p>Here is a trivial different point with card we wrote in <code>register</code>.</p><figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">hexo.extend.tag.register(<span class="string">'badge'</span>, postBadge, { <span class="attr">ends</span>: <span class="literal">false</span> });</span><br></pre></td></tr></tbody></table></figure><p>In the third parameter, we write down <code>{ ends: false }</code>, this will tell hexo that this tag has no end tag. So our badge tag should write like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">badge</span> @blah %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><p>And carefully don’t write something like this:</p><figure class="highlight js line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% badge @blah %}</span><br><span class="line">{% endbadge %}</span><br></pre></td></tr></tbody></table></figure><div class="alert alert-danger"><p>Line 2 should not be write down in post markdown file.</p></div><hr><h3 id="Classes">Classes<a class="header-anchor" href="#Classes">#</a></h3><p>badge has some <a href="https://getbootstrap.com/docs/4.4/components/badge/#contextual-variations" target="_blank" rel="noopener">different styles</a>, we can use args to implement it.</p><div class="card bg-default  my-3"><div class="card-body"><p>Args is given by hexo tag api, we can pass argument to tag.<br>so we combine style name into bs classes, this is the code.</p></div><div class="card-footer"><figure class="highlight js line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">postbadge</span> (<span class="params">args</span>) </span>{</span><br><span class="line">    args = args.join(<span class="string">' '</span>).split(<span class="string">'@'</span>);</span><br><span class="line">    <span class="keyword">var</span> classes = args[<span class="number">0</span>] || <span class="string">'secondary'</span>;</span><br><span class="line">  </span><br><span class="line">    ...</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;span class="badge badge-'</span> + classes + <span class="string">'"&gt;'</span> + text + <span class="string">'&lt;/span&gt;'</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></div><div class="card bg-default  my-3"><div class="card-body"><p><span class="badge badge-primary">Primary</span> <span class="badge badge-secondary">Secondary</span> <span class="badge badge-success">Success</span> <span class="badge badge-danger">Danger</span> <span class="badge badge-warning">Warning</span>  <span class="badge badge-info">Info</span> <span class="badge badge-light">Light</span>  <span class="badge badge-dark">Dark</span></p></div><div class="card-footer"><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">{% badge primary @Primary %}</span><br><span class="line">{% badge secondary @Secondary %}</span><br><span class="line">{% badge success @Success %}</span><br><span class="line">{% badge danger @Danger %}</span><br><span class="line">{% badge warning @Warning %}</span><br><span class="line">{% badge info @Info %}</span><br><span class="line">{% badge light @Light %}</span><br><span class="line">{% badge dark @Dark %}</span><br></pre></td></tr></tbody></table></figure></div></div><hr><h3 id="Content">Content<a class="header-anchor" href="#Content">#</a></h3><p>This is how content show.</p><div class="card bg-default  my-3"><div class="card-body"><p>Content is given by hexo tag api, this is a string inside tag (of course markdown). We can use hexo render engine to show it.</p></div><div class="card-footer"><figure class="highlight js line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">postbadge</span> (<span class="params">args</span>) </span>{</span><br><span class="line">    args = args.join(<span class="string">' '</span>).split(<span class="string">'@'</span>);</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> text = args[<span class="number">1</span>] || <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;span class="badge badge-'</span> + classes + <span class="string">'"&gt;'</span> + text + <span class="string">'&lt;/span&gt;'</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></div><hr><h3 id="Remind">Remind<a class="header-anchor" href="#Remind">#</a></h3><p>This badge styling is using <a href="https://getbootstrap.com/docs/4.4/" target="_blank" rel="noopener">Bootstrap</a> v4.4, so you need to include bs stylesheet in <code>&lt;head&gt;</code>.</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Latest compiled and minified CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.0/css/bootstrap.min.css"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><hr><h2 id="Example">Example<a class="header-anchor" href="#Example">#</a></h2><figure class="highlight md"><table><tbody><tr><td class="code"><pre><span class="line">{% badge @badge content %}</span><br></pre></td></tr></tbody></table></figure><p>So this is the correct code I wrote in the top. badge class should given by first argument</p><figure class="highlight mel"><table><tbody><tr><td class="code"><pre><span class="line">{% badge primary @Stuff %} </span><br><span class="line">{% badge secondary @Stuff %} </span><br><span class="line">{% badge success @Stuff %} </span><br><span class="line">{% badge info @Stuff %} </span><br><span class="line">{% badge <span class="keyword">warning</span> @Stuff %} </span><br><span class="line">{% badge danger @Stuff %}</span><br><span class="line">{% badge light @Stuff %}</span><br><span class="line">{% badge dark @Stuff %}</span><br></pre></td></tr></tbody></table></figure><p>If not given classes, it will also show secondary classes. So this two are equal.</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">badge</span> @Stuff %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">badge</span> secondary @Stuff %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><p>And content should put after a <code>@</code></p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">badge</span> @Content here %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><hr><p>That is, how does a badge work on hexo by using tag plugins. You can find source code about this website in <a href="https://github.com/luswdev/HackTeck/tree/master" target="_blank" rel="noopener">github</a> if you want to learn more.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;Boostrap-badge&quot;&gt;Boostrap badge&lt;a 
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.lusw.dev/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.lusw.dev/tags/Hexo/"/>
    
      <category term="bootstrap" scheme="https://blog.lusw.dev/tags/bootstrap/"/>
    
      <category term="tag plugin" scheme="https://blog.lusw.dev/tags/tag-plugin/"/>
    
      <category term="badge" scheme="https://blog.lusw.dev/tags/badge/"/>
    
  </entry>
  
  <entry>
    <title>Add Bootstrap Card Tags into Hexo</title>
    <link href="https://blog.lusw.dev/posts/hexo/add-bs-card.html"/>
    <id>https://blog.lusw.dev/posts/hexo/add-bs-card.html</id>
    <published>2020-04-23T13:11:09.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Bootstrap-Card">Bootstrap Card<a class="header-anchor" href="#Bootstrap-Card">#</a></h2><div class="card bg-default  my-3"><div class="card-header"><p>card header content</p></div><div class="card-body"><p>card content</p></div><div class="card-footer"><p>card footer</p></div></div><p>So this is a card given by <a href="https://getbootstrap.com/docs/4.4/components/card/" target="_blank" rel="noopener">bootstrap</a>, we can add this into hexo just simply write some <span class="badge badge-warning">HTML</span> like this.</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card card-default"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-header"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>card header content<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>card content<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>card footer<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>But this kind of things is not like <ins><em>Hexo</em></ins> style, and hardly to modify.<br>Luckly, Hexo is giving us some api call <a href="https://hexo.io/api/tag" target="_blank" rel="noopener"><strong>tag plugin</strong></a>, so let made a tag to insert a card!</p><hr><h2 id="Tag-Plugin">Tag Plugin<a class="header-anchor" href="#Tag-Plugin">#</a></h2><p>So what is actually tag plugin is? This is the answer of Hexo doc.</p><div class="alert alert-secondary"><p>A tag allows users to quickly and easily insert snippets into their posts.</p></div><p>As you see, we can simply build a tag and it will render a block our want. A example is above. This <strong>Bs Alert</strong> block is write down in <code>.md</code> like this:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">alert</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">blah blah</span></span><br><span class="line"><span class="xml">blah more</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endalert</span>%}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><p>And this tag is named by <em>note</em>. OK, let we get started to build card tag.</p><hr><h2 id="card-Tag">card Tag<a class="header-anchor" href="#card-Tag">#</a></h2><h3 id="card-js">card.js<a class="header-anchor" href="#card-js">#</a></h3><p>First things to do, new a file call <em>card.js</em> and put into <code>scripts</code> directory in current theme’s directory:</p><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> touch /path/to/your/current/theme/dir/script/card.js</span></span><br></pre></td></tr></tbody></table></figure><div class="alert alert-warning"><p>if <code>scripts</code> directory is not existed, first new a directory.</p><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir /path/to/your/current/theme/dir/script</span></span><br></pre></td></tr></tbody></table></figure></div><p>Then, write down this into lastest javascript file (card.js).</p><figure class="highlight js line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * card.js | global hexo script.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Usage:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * {% card class %}</span></span><br><span class="line"><span class="comment"> * &lt;!-- header --&gt;</span></span><br><span class="line"><span class="comment"> * Any content (support inline tags too).</span></span><br><span class="line"><span class="comment"> *  &lt;!-- endheader --&gt;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Any content (support inline tags too).</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * &lt;!-- footer --&gt;</span></span><br><span class="line"><span class="comment"> * Any content (support inline tags too).</span></span><br><span class="line"><span class="comment"> *  &lt;!-- endfooter --&gt;</span></span><br><span class="line"><span class="comment"> * {% endcard %}</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cardContent</span> (<span class="params">args, content</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> classes = args[<span class="number">0</span>] || <span class="string">'default'</span>;</span><br><span class="line">    <span class="keyword">var</span> textClass = (classes != <span class="string">'default'</span> &amp;&amp; classes != <span class="string">'light'</span> ) ? <span class="string">' text-white'</span> : <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> rHeading = <span class="regexp">/&lt;!--\s*header\s*--&gt;\n([\w\W\s\S]*?)&lt;!--\s*endheader\s*--&gt;/g</span>;</span><br><span class="line">    <span class="keyword">var</span> rFooter = <span class="regexp">/&lt;!--\s*footer\s*--&gt;\n([\w\W\s\S]*?)&lt;!--\s*endfooter\s*--&gt;/g</span>;</span><br><span class="line">    <span class="keyword">var</span> heading = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> footer = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> returnVal = <span class="string">'&lt;div class="card bg-'</span> + classes + <span class="string">' '</span> + textClass + <span class="string">' mt-3 mb-3"&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (heading = rHeading.exec(content)) {</span><br><span class="line">        content = content.replace(rHeading, <span class="string">''</span>);</span><br><span class="line">        returnVal += <span class="string">'&lt;div class="card-header"&gt;'</span> </span><br><span class="line">        returnVal += hexo.render.renderSync({<span class="attr">text</span>: heading[<span class="number">1</span>], <span class="attr">engine</span>: <span class="string">'markdown'</span>}).trim() + <span class="string">'&lt;/div&gt;'</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (footer = rFooter.exec(content)) {</span><br><span class="line">        content = content.replace(rFooter, <span class="string">''</span>);</span><br><span class="line">        returnVal += <span class="string">'&lt;div class="card-body"&gt;'</span> + hexo.render.renderSync({<span class="attr">text</span>: content, <span class="attr">engine</span>: <span class="string">'markdown'</span>}).trim() + <span class="string">'&lt;/div&gt;'</span>;</span><br><span class="line">        returnVal += <span class="string">'&lt;div class="card-footer"&gt;'</span> + hexo.render.renderSync({<span class="attr">text</span>: footer[<span class="number">1</span>], <span class="attr">engine</span>: <span class="string">'markdown'</span>}).trim() + <span class="string">'&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        returnVal += <span class="string">'&lt;div class="card-body"&gt;'</span> + hexo.render.renderSync({<span class="attr">text</span>: content, <span class="attr">engine</span>: <span class="string">'markdown'</span>}).trim() + <span class="string">'&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> returnVal;</span><br><span class="line">}</span><br><span class="line">  </span><br><span class="line">hexo.extend.tag.register(<span class="string">'card'</span>, cardContent, { <span class="attr">ends</span>: <span class="literal">true</span> });</span><br></pre></td></tr></tbody></table></figure><p>In line 47, we registed a tag name card, and next time we write something like below , it will show like bs card.</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">card stuff</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><hr><h3 id="Classes">Classes<a class="header-anchor" href="#Classes">#</a></h3><p>card has some <a href="https://getbootstrap.com/docs/4.4/components/card/#background-and-color" target="_blank" rel="noopener">different styles</a>, we can use args to implement it.</p><div class="card bg-default  my-3"><div class="card-body"><p>Args is given by hexo tag api, we can pass argument to tag.<br>so we combine style name into bs classes, this is the code.</p></div><div class="card-footer"><figure class="highlight js line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cardContent</span> (<span class="params">args, content</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> classes = args[<span class="number">0</span>] || <span class="string">'default'</span>;</span><br><span class="line">    <span class="keyword">var</span> textClass = (classes != <span class="string">'default'</span> &amp;&amp; classes != <span class="string">'light'</span> ) ? <span class="string">' text-white'</span> : <span class="string">''</span>;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> returnVal = <span class="string">'&lt;div class="card bg-'</span> + classes + <span class="string">' '</span> + textClass + <span class="string">' mt-3 mb-3"&gt;'</span>;</span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></div><div class="card bg-default  my-3"><div class="card-body"><div class="card bg-default  my-3"><div class="card-header"><p>Default card</p></div><div class="card-body"><p>card content</p></div></div><div class="card bg-primary  text-white my-3"><div class="card-header"><p>Primary card</p></div><div class="card-body"><p>card content</p></div></div><div class="card bg-secondary  text-white my-3"><div class="card-header"><p>Secondary card</p></div><div class="card-body"><p>card content</p></div></div><div class="card bg-success  text-white my-3"><div class="card-header"><p>Success card</p></div><div class="card-body"><p>card content</p></div></div><div class="card bg-danger  text-white my-3"><div class="card-header"><p>Danger card</p></div><div class="card-body"><p>card content</p></div></div><div class="card bg-warning  text-white my-3"><div class="card-header"><p>Warning card</p></div><div class="card-body"><p>card content</p></div></div><div class="card bg-info  text-white my-3"><div class="card-header"><p>Info card</p></div><div class="card-body"><p>card content</p></div></div><div class="card bg-light  my-3"><div class="card-header"><p>Light card</p></div><div class="card-body"><p>card content</p></div></div><div class="card bg-dark  text-white my-3"><div class="card-header"><p>Dark card</p></div><div class="card-body"><p>card content</p></div></div></div><div class="card-footer"><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">{% card default %}...{% endcard %}</span><br><span class="line">{% card primary %}...{% endcard %}</span><br><span class="line">{% card secondary %}...{% endcard %}</span><br><span class="line">{% card success %}...{% endcard %}</span><br><span class="line">{% card danger %}...{% endcard %}</span><br><span class="line">{% card warning %}...{% endcard %}</span><br><span class="line">{% card info %}...{% endcard %}</span><br><span class="line">{% card light %}...{% endcard %}</span><br><span class="line">{% card dark %}...{% endcard %}</span><br></pre></td></tr></tbody></table></figure></div></div><hr><h3 id="Content">Content<a class="header-anchor" href="#Content">#</a></h3><p>This is how content show.</p><div class="card bg-default  my-3"><div class="card-body"><p>Content is given by hexo tag api, this is a string inside tag (of course markdown). We can use hexo render engine to show it.</p></div><div class="card-footer"><figure class="highlight js line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cardContent</span> (<span class="params">args, content</span>) </span>{</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> returnVal = <span class="string">'&lt;div class="card bg-'</span> + classes + <span class="string">' '</span> + textClass + <span class="string">' mt-3 mb-3"&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    returnVal += <span class="string">'&lt;div class="card-body"&gt;'</span> + hexo.render.renderSync({<span class="attr">text</span>: content, <span class="attr">engine</span>: <span class="string">'markdown'</span>}).trim() + <span class="string">'&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> returnVal;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></div><hr><h3 id="header-and-Footer">header and Footer<a class="header-anchor" href="#header-and-Footer">#</a></h3><p>card header and footer is also given in bs, so we can implement it.</p><div class="card bg-default  my-3"><div class="card-header"><p><strong>Card Header</strong></p></div><div class="card-body"><p>This is how header work.</p><ol><li>First, you must put your header content between <code>&lt;!-- header --&gt;</code> and <code>&lt;!-- endheader --&gt;</code>.</li><li>In <em>card.js</em>, we use RegExp to find correct header content.</li><li>RegExp for header is line 1.</li><li>After finding, we render this stuff by using hexo render engine.</li></ol></div><div class="card-footer"><figure class="highlight js line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rheader = <span class="regexp">/&lt;!--\s*header\s*--&gt;\n([\w\W\s\S]*?)&lt;!--\s*endheader\s*--&gt;/g</span>;</span><br><span class="line"><span class="keyword">if</span> (heading = rHeading.exec(content)) {</span><br><span class="line">    content = content.replace(rHeading, <span class="string">''</span>);</span><br><span class="line">    returnVal += <span class="string">'&lt;div class="card-header"&gt;'</span> </span><br><span class="line">    returnVal += hexo.render.renderSync({<span class="attr">text</span>: heading[<span class="number">1</span>], <span class="attr">engine</span>: <span class="string">'markdown'</span>}).trim() + <span class="string">'&lt;/div&gt;'</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></div><div class="card bg-default  my-3"><div class="card-header"><p><strong>Card Footer</strong></p></div><div class="card-body"><p>This is how footer work.</p><ol><li>First, you must put your header content between <code>&lt;!-- footer --&gt;</code> and <code>&lt;!-- endfooter --&gt;</code>.</li><li>In <em>card.js</em>, we use RegExp to find currect footer content.</li><li>RegExp for footer is line 1.</li><li>After finding, we render this stuff by using hexo render engine.</li></ol></div><div class="card-footer"><figure class="highlight js line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rFooter = <span class="regexp">/&lt;!--\s*footer\s*--&gt;\n([\w\W\s\S]*?)&lt;!--\s*endfooter\s*--&gt;/g</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (footer = rFooter.exec(content)) {</span><br><span class="line">    content = content.replace(rFooter, <span class="string">''</span>);</span><br><span class="line">    returnVal += <span class="string">'&lt;div class="card-body"&gt;'</span> + hexo.render.renderSync({<span class="attr">text</span>: content, <span class="attr">engine</span>: <span class="string">'markdown'</span>}).trim() + <span class="string">'&lt;/div&gt;'</span>;</span><br><span class="line">    returnVal += <span class="string">'&lt;div class="card-footer"&gt;'</span> + hexo.render.renderSync({<span class="attr">text</span>: footer[<span class="number">1</span>], <span class="attr">engine</span>: <span class="string">'markdown'</span>}).trim() + <span class="string">'&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></div><hr><h3 id="Remind">Remind<a class="header-anchor" href="#Remind">#</a></h3><p>This card styling is using <a href="https://getbootstrap.com/docs/4.4/" target="_blank" rel="noopener">Bootstrap</a> v4.4, so you need to include bs stylesheet in <code>&lt;head&gt;</code>.</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Latest compiled and minified CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.0/css/bootstrap.min.css"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><hr><h2 id="Example">Example<a class="header-anchor" href="#Example">#</a></h2><figure class="highlight md"><table><tbody><tr><td class="code"><pre><span class="line">{% card %}</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- header  --&gt;</span></span></span><br><span class="line">card header content</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endheader --&gt;</span></span></span><br><span class="line">card content</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- footer --&gt;</span></span></span><br><span class="line">card footer</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endfooter --&gt;</span></span></span><br><span class="line">{% endcard %}</span><br></pre></td></tr></tbody></table></figure><p>So this is the correct code I wrote in the top. card box in the tag of:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">...</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><p>And header should put in:</p><figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- header --&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">&lt;!-- endheader --&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>Also footer should put in:</p><figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- footer --&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">&lt;!-- endfooter --&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>And this is support classes:</p><figure class="highlight django"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> default %}</span><span class="xml">...</span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> primary %}</span><span class="xml">...</span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> secondary %}</span><span class="xml">...</span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> success %}</span><span class="xml">...</span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> danger %}</span><span class="xml">...</span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> warning %}</span><span class="xml">...</span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> info %}</span><span class="xml">...</span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> light %}</span><span class="xml">...</span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name">card</span> dark %}</span><span class="xml">...</span><span class="template-tag">{% <span class="name">endcard</span> %}</span><span class="xml"></span></span><br></pre></td></tr></tbody></table></figure><p>If not given classes, it will also show default classes. So this two are equal.</p><figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line">{% card<span class="built_in"> default </span>%}<span class="built_in">..</span>.{% endcard %}</span><br><span class="line">{% card %}<span class="built_in">..</span>.{% endcard %}</span><br></pre></td></tr></tbody></table></figure><hr><p>That is, how does a card work on hexo by using tag plugins. You can find source code about this website in <a href="https://github.com/luswdev/HackTeck/tree/master" target="_blank" rel="noopener">github</a> if you want to learn more.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;Bootstrap-Card&quot;&gt;Bootstrap Card&lt;a 
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.lusw.dev/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.lusw.dev/tags/Hexo/"/>
    
      <category term="card" scheme="https://blog.lusw.dev/tags/card/"/>
    
      <category term="bootstrap" scheme="https://blog.lusw.dev/tags/bootstrap/"/>
    
      <category term="tag plugin" scheme="https://blog.lusw.dev/tags/tag-plugin/"/>
    
  </entry>
  
  <entry>
    <title>C 語言 - 位元欄位</title>
    <link href="https://blog.lusw.dev/posts/c-c++/c-bit-operation.html"/>
    <id>https://blog.lusw.dev/posts/c-c++/c-bit-operation.html</id>
    <published>2020-04-10T09:28:52.000Z</published>
    <updated>2022-04-18T03:35:11.476Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>在 C 語言中，如果我們要對特定的 bit(s) 做操作的話，最直覺的方式是用 bit and（<code>&amp;</code>）跟 bit or（<code>|</code>）：</p><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> bit_sample = <span class="number">0x0123</span>; <span class="comment">/* 0000 0001 0010 0011 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 將第 2 個 bit 改成 1 */</span></span><br><span class="line">bit_samplee |= (<span class="number">0x1</span> &lt;&lt; <span class="number">2</span>); <span class="comment">/* 0000 0001 0010 0011 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 將第 5 個 bit 改成 1 */</span></span><br><span class="line">bit_samplee |= ~(<span class="number">0x1</span> &lt;&lt; <span class="number">5</span>); <span class="comment">/* 0000 0001 0010 0011 */</span></span><br></pre></td></tr></tbody></table></figure><p>從上面的例子可以看到如何使用 bit and/or 來操作特定的 bit，這種方式對於單一個 bit 並不會太麻煩，但有以下缺點：</p><ul><li>無法覆用：這種方式不能快速地建立一個方法，也比較不好理解</li><li>對於區間上就不好使了</li></ul><p>如果要解決上述缺點，有一個方式是使用 <code>union</code>，一個在嵌入式、驅動程式裡常常用到的方法。</p><hr><h2 id="Union">Union<a class="header-anchor" href="#Union">#</a></h2><p><code>union</code> 是 C 語言裡面可以對一個結構裡面的元素，可以有不同的資料型態去理解，如以下例子：</p><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> sample {</span><br><span class="line">    <span class="keyword">int</span> sample_int;</span><br><span class="line">    <span class="keyword">char</span> sample_str[<span class="number">4</span>];</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><blockquote><p>需要注意的是：同一時間內只能存取一個屬性，準確來說他們是共用一個記憶體區塊，所以改第一個值第二個值會同時更改。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[[C 語言] 程式設計教學：如何使用聯合 (Union)](https://michaelchen.tech/c-programming/union/)">[1]</span></a></sup></p></blockquote><h3 id="struct">struct<a class="header-anchor" href="#struct">#</a></h3><p>奇怪，不是在講 <code>union</code> 嗎，怎麼會提到 <code>struct</code> 呢？那是因為 C 裡面有一個有趣的東西叫做位元欄位<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[位元欄](https://zh.wikipedia.org/wiki/%E4%BD%8D%E6%AE%B5)">[2]</span></a></sup>，這個東西必須搭配結構使用；先看例子：</p><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bit_row</span> {</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> row1 : <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> row2 : <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> row3 : <span class="number">1</span>;</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>乍看之下好像跟一般的結構差不多，可是我們注意到在每個元素宣告的結尾多了一個 <code>: 數字</code>，這是什麼意思？</p><ol><li>首先，<code>unsigned short</code> 在 64 位元裡大小是 4位，<code>unsigned int</code> 則是 8位</li><li>加上 <code>: 數字</code>，這個東西就叫位元欄位，我們可以限制當前元素的大小</li><li>因此，元素 1 的大小就被我們縮至 1 位，依此類推</li></ol><hr><p>有了上述的<strong>工具</strong>就可以建立一個好用而且好理解的位元操作方法！</p><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> method_ex {</span><br><span class="line">    <span class="keyword">int</span> real_val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">bits</span> {</span></span><br><span class="line">        <span class="keyword">short</span> bit0to2 : <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">short</span> bit3and4 : <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">short</span> bit5to7 : <span class="number">3</span>;</span><br><span class="line">    };</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>建立好上面這個 union 後，如果要將某一個整數的第 3 到 4 位 的值改掉，可以這樣寫</p><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> method_ex int_ex;</span><br><span class="line">int_ex.real_val = <span class="number">0x0123</span>; <span class="comment">/* 0000 0001 0010 0011 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* change 3 and 4 bits to 01 */</span></span><br><span class="line">int_ex.bits.bit3and4 = B01; <span class="comment">/* 0000 0001 0010 1011 */</span></span><br></pre></td></tr></tbody></table></figure><p>這樣的寫法，更簡單，更易懂。</p><hr><h3 id="剩下的空間">剩下的空間<a class="header-anchor" href="#剩下的空間">#</a></h3><p>值得注意的一件事，我們沿用上面的例子；<code>method_ex</code> 有一個元素叫<em>真正的值</em>，他是一個整數（8 位），剛好另外一個元素我們使用位元欄位的技巧也控制在 8 位；但，如果我們沒有這麼做呢？</p><div class="alert alert-warning"><p>答案是：你可以這麼寫，不會有什麼問題，但不建議。</p></div><h4 id="更大">更大<a class="header-anchor" href="#更大">#</a></h4><p>如果 <code>bits</code> 結構今天大於 8 位，那我們就沒辦法透過更改<em>真正的值</em>來改變到高於 8 位的值，因此這麼做是<strong>沒意義</strong>的。</p><h4 id="更小">更小<a class="header-anchor" href="#更小">#</a></h4><p>如果 <code>bits</code> 結構今天小於 8 位，這麼做完全不會有任何問題，但習慣上，我們會把它補齊，像是我們在 <a href="/c-attribute">attribute</a> 篇裡提到的 padding。</p><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> method_ex {</span><br><span class="line">    <span class="keyword">int</span> real_val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">bits</span> {</span></span><br><span class="line">        <span class="keyword">short</span> bit0to2 : <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">short</span> bit3and4 : <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">short</span> bit5and6 : <span class="number">2</span>;</span><br><span class="line">    };</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><div class="alert alert-info"><p>沒有定義第 7 位</p></div><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> method_ex {</span><br><span class="line">    <span class="keyword">int</span> real_val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">bits</span> {</span></span><br><span class="line">        <span class="keyword">short</span> bit0to2 : <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">short</span> bit3and4 : <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">short</span> bit5and6 : <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">short</span> notused : <span class="number">1</span>;</span><br><span class="line">    };</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><div class="alert alert-info"><p>隨便取名，只要有定義就好</p></div><div id="footnotes"><hr class="block-hr"><div id="footnotelist" class="card card-default"><div class="card-header">Reference</div><ol class="list-group list-group-flush" style="list-style: none; padding-left: 0; margin-left: 0px"><li id="fn:1" class="list-group-item"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: 0px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://michaelchen.tech/c-programming/union/" target="_blank" rel="noopener">[C 語言] 程式設計教學：如何使用聯合 (Union)</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2" class="list-group-item"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: 0px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zh.wikipedia.org/wiki/%E4%BD%8D%E6%AE%B5" target="_blank" rel="noopener">位元欄</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;在 C 語言中，如果我們要對特定的 bit(s) 做操作的話，最直覺的方式是
      
    
    </summary>
    
    
      <category term="C/C++" scheme="https://blog.lusw.dev/categories/C-C/"/>
    
    
      <category term="C/C++" scheme="https://blog.lusw.dev/tags/C-C/"/>
    
      <category term="Bit field" scheme="https://blog.lusw.dev/tags/Bit-field/"/>
    
  </entry>
  
  <entry>
    <title>如何查看 Linux 被佔用的 port</title>
    <link href="https://blog.lusw.dev/posts/linux/lookup-port.html"/>
    <id>https://blog.lusw.dev/posts/linux/lookup-port.html</id>
    <published>2020-04-08T07:08:31.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote><p>當我們下 <code>hexo s</code> 後，預設將會開啟 <code>:4000</code>，但如果 <code>:4000</code> 被佔用就會報錯；為解決此問題，我們必須知道是哪個行程佔用，並 <code>kill</code> 它。<br>以下我們介紹 2 種 Linux 的指令。</p></blockquote><h2 id="lsof">lsof<a class="header-anchor" href="#lsof">#</a></h2><p>lsof (List Open Files)<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Linux 列出行程開啟的檔案，lsof 指令用法教學與範例](https://blog.gtwang.org/linux/linux-lsof-command-list-open-files-tutorial-examples/)">[1]</span></a></sup>，可以列出所有被行程打開的檔案。可以利用 <code>-i</code> 來查找所有網路連線；於是</p><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> lsof -i</span></span><br></pre></td></tr></tbody></table></figure><p>將會列出所有使用 port 的行程。而有時候有些 port 會有別名，為了方便找查，我們加上 <code>-P</code> (列出實際的 port number)；於是</p><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> lsof -i -P</span></span><br></pre></td></tr></tbody></table></figure><p>最後為了簡化結果，我們將原本的結果傳給 <code>grep</code></p><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> lsof -i -P | grep :4000</span></span><br></pre></td></tr></tbody></table></figure><div class="alert alert-info"><p><code>:4000</code> 可任意改成想要的 port number，如 <code>:1234</code></p></div><h2 id="netstat">netstat<a class="header-anchor" href="#netstat">#</a></h2><p>netstat 可以用來查看各種網路狀態，一樣可以拿來查找被佔用的 port。</p><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> netstat -tulpn</span></span><br></pre></td></tr></tbody></table></figure><p>其中：</p><ul><li><code>-t</code> 代表找走 <code>TCP</code> 協定的</li><li><code>-u</code> 代表找走 <code>UDP</code> 協定的</li><li><code>-l</code> 代表找 <code>LISTEN</code> 的 socket</li><li><code>-n</code> 代表顯示硬體名稱，<code>-p</code> 代表顯示 PID。<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[netstat Command Usage on Linux](https://geekflare.com/netstat/)">[2]</span></a></sup></li></ul><p>我們一樣可以用 <code>grep</code> 來協助尋找</p><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> netstat -tulpn | grep :4000</span></span><br></pre></td></tr></tbody></table></figure><hr><ul><li>Reference<ul><li><a href="https://www.opencli.com/linux/3-way-check-linux-listen-port" target="_blank" rel="noopener">3 種 Linux 查看 port 被程式佔用的方法</a></li></ul></li></ul><div id="footnotes"><hr class="block-hr"><div id="footnotelist" class="card card-default"><div class="card-header">Reference</div><ol class="list-group list-group-flush" style="list-style: none; padding-left: 0; margin-left: 0px"><li id="fn:1" class="list-group-item"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: 0px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.gtwang.org/linux/linux-lsof-command-list-open-files-tutorial-examples/" target="_blank" rel="noopener">Linux 列出行程開啟的檔案，lsof 指令用法教學與範例</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2" class="list-group-item"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: 0px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://geekflare.com/netstat/" target="_blank" rel="noopener">netstat Command Usage on Linux</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;blockquote&gt;
&lt;p&gt;當我們下 &lt;code&gt;hexo s&lt;/code&gt; 
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/tags/Linux/"/>
    
      <category term="lsof" scheme="https://blog.lusw.dev/tags/lsof/"/>
    
      <category term="netstat" scheme="https://blog.lusw.dev/tags/netstat/"/>
    
  </entry>
  
  <entry>
    <title>Linux 的 &quot;init&quot; 行程</title>
    <link href="https://blog.lusw.dev/posts/linux/init-number.html"/>
    <id>https://blog.lusw.dev/posts/linux/init-number.html</id>
    <published>2020-04-08T06:18:01.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="init-行程">init 行程<a class="header-anchor" href="#init-行程">#</a></h2><p>init 行程（process/task）是 Linux 內核下的第一個行程，內核會在初始化完硬體後建立該行程。</p><blockquote><p>如 <a href="https://blog.lusw.dev/starting-xv6/#toc-heading-3">XV6 啟動流程</a> 中提到的 <code>userinit()</code></p></blockquote><p>正常來說 init 應該被放在 <code>/sbin/init</code> 中，如果內核找不到，會試著在 <code>/bin/sh</code> 中尋找，若都失敗則將導致<strong>啟動失敗</strong>。</p><h2 id="init-等級">init 等級<a class="header-anchor" href="#init-等級">#</a></h2><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>等級</th><th>用途</th></tr></thead><tbody><tr><td>0</td><td>關機</td></tr><tr><td>1</td><td>single user mode</td></tr><tr><td>6</td><td>重新啟動</td></tr></tbody></table></div><ul><li>對於 2 ~ 5，不同的發行版有不同的解釋，大部分的系統中：<ul><li>3 代表正常啟動 CLI</li><li>5 代表正常啟動 GUI</li></ul></li></ul><hr><ul><li>Reference<ul><li><a href="https://blog.csdn.net/cougar_mountain/article/details/9798191" target="_blank" rel="noopener">linux 下的init 0，1，2，3，4，5，6知识介绍</a></li><li><a href="http://felix-lin.com/linux/init%E6%BC%94%E5%8C%96%E6%AD%B7%E7%A8%8B-%E8%BD%89%E8%B2%BC-%E6%B7%BA%E6%9E%90-linux-%E5%88%9D%E5%A7%8B%E5%8C%96-init-%E7%B3%BB%E7%B5%B1%EF%BC%8C%E7%AC%AC-1-%E9%83%A8%E5%88%86-sysvinit/" target="_blank" rel="noopener">init演化歷程 – [轉貼] 淺析 Linux 初始化 init 系統，第 1 部分: sysvinit</a></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;init-行程&quot;&gt;init 行程&lt;a class=&quot;header-
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.lusw.dev/tags/Linux/"/>
    
      <category term="kernel" scheme="https://blog.lusw.dev/tags/kernel/"/>
    
      <category term="init" scheme="https://blog.lusw.dev/tags/init/"/>
    
  </entry>
  
  <entry>
    <title>在 Xcode 中為免費開發者帳戶重新建立憑證</title>
    <link href="https://blog.lusw.dev/posts/renew-xcode-profile.html"/>
    <id>https://blog.lusw.dev/posts/renew-xcode-profile.html</id>
    <published>2020-03-23T03:54:33.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="免費帳戶憑證">免費帳戶憑證<a class="header-anchor" href="#免費帳戶憑證">#</a></h2><p>免費版開發者帳戶的憑證有效期限只有 7 天，可以參考此連結。<br><a href="https://medium.com/%E5%BD%BC%E5%BE%97%E6%BD%98%E7%9A%84-swift-ios-app-%E9%96%8B%E7%99%BC%E5%95%8F%E9%A1%8C%E8%A7%A3%E7%AD%94%E9%9B%86/%E5%85%8D%E8%B2%BB%E9%96%8B%E7%99%BC%E5%B8%B3%E8%99%9F%E7%9A%84-ios-app-%E5%91%BD%E4%B8%AD%E6%B3%A8%E5%AE%9A%E5%8F%AA%E8%83%BD%E6%B4%BB%E4%B8%83%E5%A4%A9-8fd2cc849bfb" target="_blank" rel="noopener">免費開發帳號的 iOS App 命中注定只能活七天 !</a></p><p>理論上來說，超過期限只要重新從 Xcode 安裝 App 就會自動重簽 (renew)，但如果在期限內想要直接延期呢？</p><h2 id="建立新的憑證">建立新的憑證<a class="header-anchor" href="#建立新的憑證">#</a></h2><p>如果想要直接延期，唯一的方法只有重新建立一個憑證：</p><ul><li><p>從 Preference 中的 Accounts<br><div class="img-item" data-src="https://i.imgur.com/JfTJGet.png" data-sub-html=".caption"><img src="https://i.imgur.com/JfTJGet.png" alt="Preference ></div> Accounts"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">Preference ></div> Accounts</span></div></p></li><li><p>選擇右下角的 Manage Certificates…<br><div class="img-item" data-src="https://i.imgur.com/r5PAFur.png" data-sub-html=".caption"><img src="https://i.imgur.com/r5PAFur.png" alt="黃框處"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">黃框處</span></div></div></p></li><li><p>按下去，選擇左下角的 <code>+</code><br><div class="img-item" data-src="https://i.imgur.com/Q59J2Tj.png" data-sub-html=".caption"><img src="https://i.imgur.com/Q59J2Tj.png" alt="黃框處"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">黃框處</span></div></div></p></li><li><p>選擇 Apple Development<br><div class="img-item" data-src="https://i.imgur.com/bSelwuz.png" data-sub-html=".caption"><img src="https://i.imgur.com/bSelwuz.png" alt=""><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom"></span></div></div></p></li></ul><p>之後就會新增一個憑證，可以回去 Targets 看憑證的確更新了。<br><div class="img-item" data-src="https://i.imgur.com/9MsNUqd.png" data-sub-html=".caption"><img src="https://i.imgur.com/9MsNUqd.png" alt="紅字"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">紅字</span></div></div></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;免費帳戶憑證&quot;&gt;免費帳戶憑證&lt;a class=&quot;header-an
      
    
    </summary>
    
    
      <category term="Note" scheme="https://blog.lusw.dev/categories/Note/"/>
    
    
      <category term="Xcode" scheme="https://blog.lusw.dev/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title>CSS3選擇器 :not()</title>
    <link href="https://blog.lusw.dev/posts/css-not-selecter.html"/>
    <id>https://blog.lusw.dev/posts/css-not-selecter.html</id>
    <published>2020-01-29T06:03:34.000Z</published>
    <updated>2022-04-18T03:35:11.476Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="用途">用途<a class="header-anchor" href="#用途">#</a></h2><p>假設有多個一樣 <code>label</code> 的元素要套用一種樣式，但又有幾個需要排除在外時使用。</p><h3 id="例子">例子<a class="header-anchor" href="#例子">#</a></h3><div class="card bg-default  my-3"><div class="card-body"><style>.ex-box {    text-align: center;}.ex {    color: #f00;    font-style: italic;    font-weight: bold;}</style><div class="ex-box"><span class="ex">1</span>    <span class="ex">2</span>    <span class="ex">3</span>    <span class="ex">4</span></div></div><div class="card-footer"><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ex-box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ex"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ex"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ex"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ex"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight css"><table><tbody><tr><td class="code"><pre><span class="line"><span class="selector-class">.ex-box</span> {</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.ex</span> {</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f00</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></div><div class="alert alert-info"><p>可以看到上面：1~4 都有<em>斜體</em>跟<strong>粗體</strong>，為了方便觀察，這裡讓文字變為紅色</p></div><hr><div class="card bg-default  my-3"><div class="card-header"><p>接著將 3 號加上 <code>not-ex-ignored</code> 的 id，並將此 id 略過（使用 <code>:not</code> 選擇器）</p></div><div class="card-body"><style>.not-ex-box {    text-align: center;}.not-ex:not(#not-ex-ignored) {    color: #f00;    font-style: italic;    font-weight: bold;}</style><div class="not-ex-box"><span class="not-ex">1</span>    <span class="not-ex">2</span>    <span class="not-ex" id="not-ex-ignored">3</span>    <span class="not-ex">4</span></div></div><div class="card-footer"><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"not-ex-box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"not-ex"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"not-ex"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"not-ex"</span> <span class="attr">id</span>=<span class="string">"not-ex-ignored"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"not-ex"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight css"><table><tbody><tr><td class="code"><pre><span class="line"><span class="selector-class">.not-ex-box</span> {</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.not-ex</span><span class="selector-pseudo">:not(</span><span class="selector-id">#not-ex-ignored</span>) {</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f00</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></div><div class="alert alert-info"><p>如此一來，就只有三號沒有套用到屬性。</p></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;用途&quot;&gt;用途&lt;a class=&quot;header-anchor&quot; hr
      
    
    </summary>
    
    
      <category term="Note" scheme="https://blog.lusw.dev/categories/Note/"/>
    
    
      <category term="css" scheme="https://blog.lusw.dev/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Perl 模組安裝</title>
    <link href="https://blog.lusw.dev/posts/perl-install-module.html"/>
    <id>https://blog.lusw.dev/posts/perl-install-module.html</id>
    <published>2019-12-27T10:40:13.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="使用自動安裝的環境">使用自動安裝的環境<a class="header-anchor" href="#使用自動安裝的環境">#</a></h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> perl -MCPAN -e shell</span></span><br></pre></td></tr></tbody></table></figure><ul><li>類似於 <code>apt</code>、<code>brew</code> 的好用套件，輸入指令會進入此環境中，成功的話終端機會顯示此畫面:</li></ul><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cman&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="安裝">安裝<a class="header-anchor" href="#安裝">#</a></h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cman&gt; install Module::Name</span></span><br></pre></td></tr></tbody></table></figure><ul><li>直接下 install 指令 後面接模組名稱即可。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;使用自動安裝的環境&quot;&gt;使用自動安裝的環境&lt;a class=&quot;hea
      
    
    </summary>
    
    
      <category term="Note" scheme="https://blog.lusw.dev/categories/Note/"/>
    
    
      <category term="perl" scheme="https://blog.lusw.dev/tags/perl/"/>
    
  </entry>
  
  <entry>
    <title>在 Arduino 上使用中斷</title>
    <link href="https://blog.lusw.dev/posts/arduino-interrupt.html"/>
    <id>https://blog.lusw.dev/posts/arduino-interrupt.html</id>
    <published>2019-12-26T15:36:34.000Z</published>
    <updated>2022-04-18T03:35:11.476Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="新增中斷">新增中斷<a class="header-anchor" href="#新增中斷">#</a></h2><figure class="highlight arduino"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">attachInterrupt</span>(digitalPinToInterrupt(pin), ISR, mode);</span><br><span class="line"><span class="built_in">attachInterrupt</span>(interrupt, ISR, mode);</span><br><span class="line"><span class="built_in">attachInterrupt</span>(pin, ISR, mode);</span><br></pre></td></tr></tbody></table></figure><ul><li>有三種可選：<ul><li>第一個參數代表幾號中斷或是幾號 pin，通常用第一種寫法最保險</li><li>第二個參數放 ISR，當中斷發生時要做的事</li><li>第三個參數為發生中斷的模式，下面有詳細介紹</li></ul></li></ul><h3 id="模式">模式<a class="header-anchor" href="#模式">#</a></h3><ul><li>LOW：當 pin 處於低電位的時候觸發中斷</li><li>RISING：當 pin 從低電位轉為高電位時觸發中斷</li><li>FALLING：當 pin 從高電位轉為高電位時觸發中斷</li><li>CHANGE：當 pin 的電位發生改變時觸發中斷</li><li>HIGH：當 pin 處於高電位時觸發中斷（只適用 arduino due）</li></ul><h2 id="移除中斷">移除中斷<a class="header-anchor" href="#移除中斷">#</a></h2><figure class="highlight arduino"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">detachInterrupt</span>(digitalPinToInterrupt(pin));</span><br><span class="line"><span class="built_in">detachInterrupt</span>(interrupt);</span><br><span class="line"><span class="built_in">detachInterrupt</span>(pin);</span><br></pre></td></tr></tbody></table></figure><ul><li>一樣有三個寫法，與新增中斷的第一個參數相同。</li></ul><h2 id="關閉-開啟中斷">關閉/開啟中斷<a class="header-anchor" href="#關閉-開啟中斷">#</a></h2><figure class="highlight arduino"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">noInterrupts</span>();</span><br><span class="line"><span class="built_in">interrupts</span>();</span><br></pre></td></tr></tbody></table></figure><div class="alert alert-warning"><p><code>noInterrupts</code> 不會將 <code>reset</code> 中斷關閉。</p></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;新增中斷&quot;&gt;新增中斷&lt;a class=&quot;header-anchor
      
    
    </summary>
    
    
      <category term="Note" scheme="https://blog.lusw.dev/categories/Note/"/>
    
    
      <category term="Arduino" scheme="https://blog.lusw.dev/tags/Arduino/"/>
    
      <category term="interrupt" scheme="https://blog.lusw.dev/tags/interrupt/"/>
    
  </entry>
  
  <entry>
    <title>使用 ANSI 跳脫碼印出有色文字</title>
    <link href="https://blog.lusw.dev/posts/c-c++/ascii-color.html"/>
    <id>https://blog.lusw.dev/posts/c-c++/ascii-color.html</id>
    <published>2019-12-26T14:50:57.000Z</published>
    <updated>2022-04-18T03:35:11.476Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="ANSI-跳脫碼">ANSI 跳脫碼<a class="header-anchor" href="#ANSI-跳脫碼">#</a></h2><p>ANSI 跳脫碼，即 ASCII Escape Code，標準 CSI 格式為</p><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line">CSI n1 [;n2 [;...]] m</span><br></pre></td></tr></tbody></table></figure><ul><li><code>n1</code> 通常填入 <code>\x1b</code>，在 ASCII 表中 <code>0x1b</code> 代表著 escape。</li><li><code>n1</code>、<code>n2</code> 為 <strong>SGR (Select Graphic Rendition)</strong>，可參考表格對應相對的值。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[[Linux C] ANSI逃脫碼與printf顏色教學](http://naeilproj.blogspot.com/2015/08/linux-c-c-printf.html)">[1]</span></a></sup></li></ul><h2 id="顏色輸出">顏色輸出<a class="header-anchor" href="#顏色輸出">#</a></h2><h3 id="範例：粗紅體">範例：粗紅體<a class="header-anchor" href="#範例：粗紅體">#</a></h3><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line">\x1b[;<span class="number">31</span>;<span class="number">1</span>m</span><br></pre></td></tr></tbody></table></figure><ul><li>SGR 30~37 代表著顏色，可參照此表格<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[ANSI跳脫序列](https://zh.wikipedia.org/wiki/ANSI%E8%BD%AC%E4%B9%89%E5%BA%8F%E5%88%97)">[2]</span></a></sup><br><div class="img-item" data-src="https://i.imgur.com/8HEFwxZ.png" data-sub-html=".caption"><img src="https://i.imgur.com/8HEFwxZ.png" alt=""><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom"></span></div></div></li><li>後面的 1 代表粗體，不寫則為一般字型；通常一般的終端機會將粗體顯示成較亮的顏色，而非粗體。</li><li>有些終端機提供用高位的數字指定較亮的顏色，90-97 及 100-107，如下圖<br><div class="img-item" data-src="https://i.imgur.com/mEP8AjU.png" data-sub-html=".caption"><img src="https://i.imgur.com/mEP8AjU.png" alt=""><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom"></span></div></div></li></ul><h3 id="xterm-256color">xterm-256color<a class="header-anchor" href="#xterm-256color">#</a></h3><ul><li>使用 8 位元的 SGR，進而提供 256 色的輸出。<br><div class="img-item" data-src="https://i.imgur.com/hjjHfve.png" data-sub-html=".caption"><img src="https://i.imgur.com/hjjHfve.png" alt=""><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom"></span></div></div></li></ul><div id="footnotes"><hr class="block-hr"><div id="footnotelist" class="card card-default"><div class="card-header">Reference</div><ol class="list-group list-group-flush" style="list-style: none; padding-left: 0; margin-left: 0px"><li id="fn:1" class="list-group-item"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: 0px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="http://naeilproj.blogspot.com/2015/08/linux-c-c-printf.html" target="_blank" rel="noopener">[Linux C] ANSI逃脫碼與printf顏色教學</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2" class="list-group-item"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: 0px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zh.wikipedia.org/wiki/ANSI%E8%BD%AC%E4%B9%89%E5%BA%8F%E5%88%97" target="_blank" rel="noopener">ANSI跳脫序列</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;ANSI-跳脫碼&quot;&gt;ANSI 跳脫碼&lt;a class=&quot;heade
      
    
    </summary>
    
    
      <category term="C/C++" scheme="https://blog.lusw.dev/categories/C-C/"/>
    
    
      <category term="C/C++" scheme="https://blog.lusw.dev/tags/C-C/"/>
    
      <category term="ANSI" scheme="https://blog.lusw.dev/tags/ANSI/"/>
    
  </entry>
  
  <entry>
    <title>RT-Thread GUI -  Drawable Canvas HW</title>
    <link href="https://blog.lusw.dev/posts/rt-thread/gui-dc-hw.html"/>
    <id>https://blog.lusw.dev/posts/rt-thread/gui-dc-hw.html</id>
    <published>2019-03-13T03:27:41.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>rtgui 中的 dc 也就是繪圖引擎，可以說是 rtgui 中最重要的一個部分，其中分成 3 個部分：給硬體的 dc_hw、給 buffer 的 dc_buffer 以及給 client 的。</p><p>接下來將會追蹤 dc_hw 中的程式碼，分析 rtgui 是如何在螢幕上面描繪點線面。</p><hr><h2 id="結構">結構<a class="header-anchor" href="#結構">#</a></h2><h3 id="dc">dc<a class="header-anchor" href="#dc">#</a></h3><div class="alert alert-success"><p><strong>File:</strong> dc.h</p></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The abstract device context</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Normally, a DC is a drawable canvas, user can draw point/line/cycle etc</span></span><br><span class="line"><span class="comment"> * on the DC.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * There are several kinds of DC:</span></span><br><span class="line"><span class="comment"> * - Hardware DC;</span></span><br><span class="line"><span class="comment"> * - Client DC;</span></span><br><span class="line"><span class="comment"> * - Buffer DC;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">/* type of device context */</span></span><br><span class="line">    <span class="keyword">rt_uint32_t</span> type;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* dc engine */</span></span><br><span class="line">    <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_engine</span> *<span class="title">engine</span>;</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="dc-engine">dc_engine<a class="header-anchor" href="#dc-engine">#</a></h3><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_engine</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">/* interface */</span></span><br><span class="line">    <span class="keyword">void</span> (*draw_point)(struct rtgui_dc *dc, <span class="keyword">int</span> x, <span class="keyword">int</span> y);</span><br><span class="line">    <span class="keyword">void</span> (*draw_color_point)(struct rtgui_dc *dc, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">rtgui_color_t</span> color);</span><br><span class="line">    <span class="keyword">void</span> (*draw_vline)(struct rtgui_dc *dc, <span class="keyword">int</span> x, <span class="keyword">int</span> y1, <span class="keyword">int</span> y2);</span><br><span class="line">    <span class="keyword">void</span> (*draw_hline)(struct rtgui_dc *dc, <span class="keyword">int</span> x1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y);</span><br><span class="line">    <span class="keyword">void</span> (*fill_rect)(struct rtgui_dc *dc, <span class="keyword">rtgui_rect_t</span> *rect);</span><br><span class="line">    <span class="keyword">void</span> (*blit_line)(struct rtgui_dc *dc, <span class="keyword">int</span> x1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y, <span class="keyword">rt_uint8_t</span> *line_data);</span><br><span class="line">    <span class="keyword">void</span> (*blit)(struct rtgui_dc *dc, struct rtgui_point *dc_point, struct rtgui_dc *dest, <span class="keyword">rtgui_rect_t</span> *rect);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">rt_bool_t</span> (*fini)(struct rtgui_dc *dc);</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="dc-hw">dc_hw<a class="header-anchor" href="#dc-hw">#</a></h3><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The hardware device context</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The hardware DC is a context based on hardware device, for examle the</span></span><br><span class="line"><span class="comment"> * LCD device. The operations on the hardware DC are reflected to the real</span></span><br><span class="line"><span class="comment"> * hardware.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_hw</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc</span> <span class="title">parent</span>;</span></span><br><span class="line">    <span class="keyword">rtgui_widget_t</span> *owner;</span><br><span class="line">    <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_graphic_driver</span> *<span class="title">hw_driver</span>;</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="hw-engine">hw_engine<a class="header-anchor" href="#hw-engine">#</a></h3><div class="alert alert-success"><p><strong>File:</strong> dc_hw.c</p></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_engine</span> <span class="title">dc_hw_engine</span> =</span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    rtgui_dc_hw_draw_point,</span><br><span class="line">    rtgui_dc_hw_draw_color_point,</span><br><span class="line">    rtgui_dc_hw_draw_vline,</span><br><span class="line">    rtgui_dc_hw_draw_hline,</span><br><span class="line">    rtgui_dc_hw_fill_rect,</span><br><span class="line">    rtgui_dc_hw_blit_line,</span><br><span class="line">    rtgui_dc_hw_blit,</span><br><span class="line"></span><br><span class="line">    rtgui_dc_hw_fini,</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="啟動-dc">啟動 dc<a class="header-anchor" href="#啟動-dc">#</a></h2><p>我們可以從 rtgui 官方提供的範例發現，在使用 dc 前，需要先利用 <code>rtgui_dc_begin_drawing</code> 來啟動引擎，並在結束時呼叫 <code>rtgui_dc_end_drawing</code>；而啟動時，會判斷要使用哪種 dc，並啟動，如 1866 至 1871 行</p><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* create client or hardware DC */</span></span><br><span class="line">    <span class="keyword">if</span> ((rtgui_region_is_flat(&amp;owner-&gt;clip) == RT_EOK) &amp;&amp;</span><br><span class="line">            rtgui_rect_is_equal(&amp;(owner-&gt;extent), &amp;(owner-&gt;clip.extents)) == RT_EOK)</span><br><span class="line">        dc = rtgui_dc_hw_create(owner);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        dc = rtgui_dc_client_create(owner);</span><br></pre></td></tr></tbody></table></figure><p>如果判斷為 hw，則進入 <code>rtgui_dc_hw_create</code></p><hr><h2 id="建立-dc">建立 dc<a class="header-anchor" href="#建立-dc">#</a></h2><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*owner</code></th></tr></thead><tbody><tr><td>建立 dc</td><td>dc 指標</td><td>dc 擁有者</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">struct rtgui_dc *<span class="title">rtgui_dc_hw_create</span><span class="params">(<span class="keyword">rtgui_widget_t</span> *owner)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_hw</span> *<span class="title">dc</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* adjudge owner */</span></span><br><span class="line">    <span class="keyword">if</span> (owner == RT_NULL || owner-&gt;toplevel == RT_NULL) <span class="keyword">return</span> RT_NULL;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* create DC */</span></span><br><span class="line">    dc = (struct rtgui_dc_hw *) rtgui_malloc(<span class="keyword">sizeof</span>(struct rtgui_dc_hw));</span><br><span class="line">    <span class="keyword">if</span> (dc)</span><br><span class="line">    {</span><br><span class="line">        dc-&gt;parent.type = RTGUI_DC_HW;</span><br><span class="line">        dc-&gt;parent.engine = &amp;dc_hw_engine;</span><br><span class="line">        dc-&gt;owner = owner;</span><br><span class="line">        dc-&gt;hw_driver = rtgui_graphic_driver_get_default();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &amp;(dc-&gt;parent);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> RT_NULL;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="運作-dc-畫圖">運作 dc (畫圖)<a class="header-anchor" href="#運作-dc-畫圖">#</a></h2><h3 id="點">點<a class="header-anchor" href="#點">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>畫點</td><td>void</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*self</code></th><th><code>x</code></th><th><code>y</code></th></tr></thead><tbody><tr><td>dc 本體</td><td>座標 x</td><td>座標 y</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * draw a logic point on device</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtgui_dc_hw_draw_point</span><span class="params">(struct rtgui_dc *self, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_hw</span> *<span class="title">dc</span>;</span></span><br><span class="line"></span><br><span class="line">    RT_ASSERT(self != RT_NULL);</span><br><span class="line">    dc = (struct rtgui_dc_hw *) self;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span> || y &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    x = x + dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= dc-&gt;owner-&gt;extent.x2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    y = y + dc-&gt;owner-&gt;extent.y1;</span><br><span class="line">    <span class="keyword">if</span> (y &gt;= dc-&gt;owner-&gt;extent.y2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* draw this point */</span></span><br><span class="line">    dc-&gt;hw_driver-&gt;ops-&gt;set_pixel(&amp;(dc-&gt;owner-&gt;gc.foreground), x, y);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>首先傳進去的座標一律為邏輯位置，也就是以此 dc 所屬物件（有可能是視窗、元件等）的 $(x_1,y_1)$ 為原點之座標；由於 $(x_1,y_1)$ 為該物件（通常為矩形）的左下角，所以傳入的座標不會有負號。</p><p>接著將邏輯座標轉為實際座標（也就是螢幕上的真正位置），所以把 $(x,y)$ 轉成 $(x+x_1,y+y_1)$；由於 dc 是跟隨物件的，所以新座標不可超過 $(x_2,y_2)$，也就是右上角。</p><p>最後利用驅動中設定好的 <code>set_pixel</code> 函數來上色，這裡使用預設顏色。</p><hr><h3 id="彩色點">彩色點<a class="header-anchor" href="#彩色點">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>畫彩色點</td><td>void</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*self</code></th><th><code>x</code></th><th><code>y</code></th><th><code>color</code></th></tr></thead><tbody><tr><td>dc 本體</td><td>座標 x</td><td>座標 y</td><td>所選的顏色</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtgui_dc_hw_draw_color_point</span><span class="params">(struct rtgui_dc *self, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">rtgui_color_t</span> color)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_hw</span> *<span class="title">dc</span>;</span></span><br><span class="line"></span><br><span class="line">    RT_ASSERT(self != RT_NULL);</span><br><span class="line">    dc = (struct rtgui_dc_hw *) self;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span> || y &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    x = x + dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= dc-&gt;owner-&gt;extent.x2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    y = y + dc-&gt;owner-&gt;extent.y1;</span><br><span class="line">    <span class="keyword">if</span> (y &gt;= dc-&gt;owner-&gt;extent.y2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* draw this point */</span></span><br><span class="line">    dc-&gt;hw_driver-&gt;ops-&gt;set_pixel(&amp;color, x, y);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>跟上面最大的不同是可以選顏色 (131)。</p><hr><h3 id="水平線">水平線<a class="header-anchor" href="#水平線">#</a></h3><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * draw a logic vertical line on device</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtgui_dc_hw_draw_vline</span><span class="params">(struct rtgui_dc *self, <span class="keyword">int</span> x, <span class="keyword">int</span> y1, <span class="keyword">int</span> y2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_hw</span> *<span class="title">dc</span>;</span></span><br><span class="line"></span><br><span class="line">    RT_ASSERT(self != RT_NULL);</span><br><span class="line">    dc = (struct rtgui_dc_hw *) self;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    x = x + dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= dc-&gt;owner-&gt;extent.x2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    y1 = y1 + dc-&gt;owner-&gt;extent.y1;</span><br><span class="line">    y2 = y2 + dc-&gt;owner-&gt;extent.y1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (y1 &gt; y2)</span><br><span class="line">        _int_swap(y1, y2);</span><br><span class="line">    <span class="keyword">if</span> (y1 &gt; dc-&gt;owner-&gt;extent.y2 || y2 &lt; dc-&gt;owner-&gt;extent.y1)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (y1 &lt; dc-&gt;owner-&gt;extent.y1)</span><br><span class="line">        y1 = dc-&gt;owner-&gt;extent.y1;</span><br><span class="line">    <span class="keyword">if</span> (y2 &gt; dc-&gt;owner-&gt;extent.y2)</span><br><span class="line">        y2 = dc-&gt;owner-&gt;extent.y2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* draw vline */</span></span><br><span class="line">    dc-&gt;hw_driver-&gt;ops-&gt;draw_vline(&amp;(dc-&gt;owner-&gt;gc.foreground), x, y1, y2);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="鉛直線">鉛直線<a class="header-anchor" href="#鉛直線">#</a></h3><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * draw a logic horizontal line on device</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtgui_dc_hw_draw_hline</span><span class="params">(struct rtgui_dc *self, <span class="keyword">int</span> x1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_hw</span> *<span class="title">dc</span>;</span></span><br><span class="line"></span><br><span class="line">    RT_ASSERT(self != RT_NULL);</span><br><span class="line">    dc = (struct rtgui_dc_hw *) self;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (y &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    y = y + dc-&gt;owner-&gt;extent.y1;</span><br><span class="line">    <span class="keyword">if</span> (y &gt;= dc-&gt;owner-&gt;extent.y2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* convert logic to device */</span></span><br><span class="line">    x1 = x1 + dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    x2 = x2 + dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    <span class="keyword">if</span> (x1 &gt; x2)</span><br><span class="line">        _int_swap(x1, x2);</span><br><span class="line">    <span class="keyword">if</span> (x1 &gt; dc-&gt;owner-&gt;extent.x2 || x2 &lt; dc-&gt;owner-&gt;extent.x1)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x1 &lt; dc-&gt;owner-&gt;extent.x1)</span><br><span class="line">        x1 = dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    <span class="keyword">if</span> (x2 &gt; dc-&gt;owner-&gt;extent.x2)</span><br><span class="line">        x2 = dc-&gt;owner-&gt;extent.x2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* draw hline */</span></span><br><span class="line">    dc-&gt;hw_driver-&gt;ops-&gt;draw_hline(&amp;(dc-&gt;owner-&gt;gc.foreground), x1, x2, y);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="矩形">矩形<a class="header-anchor" href="#矩形">#</a></h3><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtgui_dc_hw_fill_rect</span><span class="params">(struct rtgui_dc *self, struct rtgui_rect *rect)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">rtgui_color_t</span> color;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">rt_base_t</span> y1, y2, x1, x2;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_hw</span> *<span class="title">dc</span>;</span></span><br><span class="line"></span><br><span class="line">    RT_ASSERT(self != RT_NULL);</span><br><span class="line">    RT_ASSERT(rect);</span><br><span class="line">    dc = (struct rtgui_dc_hw *) self;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* get background color */</span></span><br><span class="line">    color = dc-&gt;owner-&gt;gc.background;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* convert logic to device */</span></span><br><span class="line">    x1 = rect-&gt;x1 + dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    <span class="keyword">if</span> (x1 &gt; dc-&gt;owner-&gt;extent.x2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (x1 &lt; dc-&gt;owner-&gt;extent.x1)</span><br><span class="line">        x1 = dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    x2 = rect-&gt;x2 + dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    <span class="keyword">if</span> (x2 &lt; dc-&gt;owner-&gt;extent.x1)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (x2 &gt; dc-&gt;owner-&gt;extent.x2)</span><br><span class="line">        x2 = dc-&gt;owner-&gt;extent.x2;</span><br><span class="line"></span><br><span class="line">    y1 = rect-&gt;y1 + dc-&gt;owner-&gt;extent.y1;</span><br><span class="line">    <span class="keyword">if</span> (y1 &gt; dc-&gt;owner-&gt;extent.y2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (y1 &lt; dc-&gt;owner-&gt;extent.y1)</span><br><span class="line">        y1 = dc-&gt;owner-&gt;extent.y1;</span><br><span class="line">    y2 = rect-&gt;y2 + dc-&gt;owner-&gt;extent.y1;</span><br><span class="line">    <span class="keyword">if</span> (y2 &lt; dc-&gt;owner-&gt;extent.y1)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (y2 &gt; dc-&gt;owner-&gt;extent.y2)</span><br><span class="line">        y2 = dc-&gt;owner-&gt;extent.y2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* fill rect */</span></span><br><span class="line">    <span class="keyword">for</span> (; y1 &lt; y2; y1++)</span><br><span class="line">    {</span><br><span class="line">        dc-&gt;hw_driver-&gt;ops-&gt;draw_hline(&amp;color, x1, x2, y1);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="blit">blit(?)<a class="header-anchor" href="#blit">#</a></h3><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtgui_dc_hw_blit_line</span><span class="params">(struct rtgui_dc *self, <span class="keyword">int</span> x1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y, <span class="keyword">rt_uint8_t</span> *line_data)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc_hw</span> *<span class="title">dc</span>;</span></span><br><span class="line"></span><br><span class="line">    RT_ASSERT(self != RT_NULL);</span><br><span class="line">    dc = (struct rtgui_dc_hw *) self;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* convert logic to device */</span></span><br><span class="line">    <span class="keyword">if</span> (y &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    y = y + dc-&gt;owner-&gt;extent.y1;</span><br><span class="line">    <span class="keyword">if</span> (y &gt; dc-&gt;owner-&gt;extent.y2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    x1 = x1 + dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    x2 = x2 + dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    <span class="keyword">if</span> (x1 &gt; x2)</span><br><span class="line">        _int_swap(x1, x2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x1 &gt; dc-&gt;owner-&gt;extent.x2 || x2 &lt; dc-&gt;owner-&gt;extent.x1)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (x1 &lt; dc-&gt;owner-&gt;extent.x1)</span><br><span class="line">        x1 = dc-&gt;owner-&gt;extent.x1;</span><br><span class="line">    <span class="keyword">if</span> (x2 &gt; dc-&gt;owner-&gt;extent.x2)</span><br><span class="line">        x2 = dc-&gt;owner-&gt;extent.x2;</span><br><span class="line"></span><br><span class="line">    dc-&gt;hw_driver-&gt;ops-&gt;draw_raw_hline(line_data, x1, x2, y);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtgui_dc_hw_blit</span><span class="params">(struct rtgui_dc *dc,</span></span></span><br><span class="line"><span class="function"><span class="params">                             struct rtgui_point *dc_point,</span></span></span><br><span class="line"><span class="function"><span class="params">                             struct rtgui_dc *dest,</span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">rtgui_rect_t</span> *rect)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">/* not blit in hardware dc */</span></span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;rtgui 中的 dc 也就是繪圖引擎，可以說是 rtgui 中最重要的一個
      
    
    </summary>
    
    
      <category term="RT-Thread GUI" scheme="https://blog.lusw.dev/categories/RT-Thread-GUI/"/>
    
    
      <category term="RT-Thread" scheme="https://blog.lusw.dev/tags/RT-Thread/"/>
    
      <category term="GUI" scheme="https://blog.lusw.dev/tags/GUI/"/>
    
      <category term="dc" scheme="https://blog.lusw.dev/tags/dc/"/>
    
  </entry>
  
  <entry>
    <title>RT-Thread GUI - Server</title>
    <link href="https://blog.lusw.dev/posts/rt-thread/gui-server.html"/>
    <id>https://blog.lusw.dev/posts/rt-thread/gui-server.html</id>
    <published>2019-02-23T07:08:11.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="基本事件結構">基本事件結構<a class="header-anchor" href="#基本事件結構">#</a></h2><p>server 掌管整個 GUI system 的所有事件 (event)，而根據不同的事件定義不同的結構；在每個不同的結構中都有基本的欄位 <code>_RTGUI_EVENT_WIN_ELEMENTS</code>：</p><div class="alert alert-success"><p><strong>File:</strong> event.c</p></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * RTGUI Window Event</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _RTGUI_EVENT_WIN_ELEMENTS \</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event</span> <span class="title">parent</span>;</span> \</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_win</span> *<span class="title">wid</span>;</span></span><br></pre></td></tr></tbody></table></figure><p><code>rtgui_event</code> 即為事件的基本結構：</p><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">/* the event type */</span></span><br><span class="line">    <span class="keyword">enum</span> _rtgui_event_type type;</span><br><span class="line">    <span class="comment">/* user field of event */</span></span><br><span class="line">    <span class="keyword">rt_uint16_t</span> user;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* the event sender */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_app</span> *<span class="title">sender</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* mailbox to acknowledge request */</span></span><br><span class="line">    <span class="keyword">rt_mailbox_t</span> ack;</span><br><span class="line">};</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event</span> <span class="title">rtgui_event_t</span>;</span></span><br></pre></td></tr></tbody></table></figure><hr><h3 id="基本結構設定">基本結構設定<a class="header-anchor" href="#基本結構設定">#</a></h3><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RTGUI_EVENT_INIT(e, t)  do      \</span></span><br><span class="line">{                                       \</span><br><span class="line">    (e)-&gt;type = (t);                    \</span><br><span class="line">    (e)-&gt;user = <span class="number">0</span>;                      \</span><br><span class="line">    (e)-&gt;sender = rtgui_app_self();     \</span><br><span class="line">    (e)-&gt;ack = RT_NULL;                 \</span><br><span class="line">} <span class="keyword">while</span> (<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="啟動-server">啟動 server<a class="header-anchor" href="#啟動-server">#</a></h2><div class="alert alert-success"><p><strong>File:</strong> server.c</p></div><p>首先，定義一個 app 名叫 server :</p><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_app</span> *<span class="title">rtgui_server_app</span> = <span class="title">RT_NULL</span>;</span></span><br></pre></td></tr></tbody></table></figure><p>接著透過 <code>rtgui_server_entry</code> 啟動 app，也就是 server:</p><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*parameter</code></th></tr></thead><tbody><tr><td>啟動 server</td><td>void</td><td>未使用</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * rtgui server thread's entry</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtgui_server_entry</span><span class="params">(<span class="keyword">void</span> *parameter)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32_NATIVE</span></span><br><span class="line">    <span class="comment">/* set the server thread to highest */</span></span><br><span class="line">    HANDLE hCurrentThread = GetCurrentThread();</span><br><span class="line">    SetThreadPriority(hCurrentThread, THREAD_PRIORITY_HIGHEST);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* create rtgui server application */</span></span><br><span class="line">    rtgui_server_app = rtgui_app_create(<span class="string">"rtgui"</span>);</span><br><span class="line">    <span class="keyword">if</span> (rtgui_server_app == RT_NULL)</span><br><span class="line">    {</span><br><span class="line">        rt_kprintf(<span class="string">"Create GUI server failed.\n"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    rtgui_object_set_event_handler(RTGUI_OBJECT(rtgui_server_app),</span><br><span class="line">                                   rtgui_server_event_handler);</span><br><span class="line">    <span class="comment">/* init mouse and show */</span></span><br><span class="line">    rtgui_mouse_init();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> RTGUI_USING_MOUSE_CURSOR</span></span><br><span class="line">    rtgui_mouse_show_cursor();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    rtgui_app_run(rtgui_server_app);</span><br><span class="line"></span><br><span class="line">    rtgui_app_destroy(rtgui_server_app);</span><br><span class="line">    rtgui_server_app = RT_NULL;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>最後會進入 <code>rtgui_app_run</code> 並正式開始執行 server，也就是進入所屬的 event handler</p><hr><h2 id="Event-Handler">Event Handler<a class="header-anchor" href="#Event-Handler">#</a></h2><p>Event handler 也就是 server 的進入點</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;基本事件結構&quot;&gt;基本事件結構&lt;a class=&quot;header-an
      
    
    </summary>
    
    
      <category term="RT-Thread GUI" scheme="https://blog.lusw.dev/categories/RT-Thread-GUI/"/>
    
    
      <category term="RT-Thread" scheme="https://blog.lusw.dev/tags/RT-Thread/"/>
    
      <category term="GUI" scheme="https://blog.lusw.dev/tags/GUI/"/>
    
      <category term="server" scheme="https://blog.lusw.dev/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>RT-Thread GUI - Window</title>
    <link href="https://blog.lusw.dev/posts/rt-thread/gui-window.html"/>
    <id>https://blog.lusw.dev/posts/rt-thread/gui-window.html</id>
    <published>2019-01-29T12:53:02.000Z</published>
    <updated>2022-04-18T03:35:11.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="alert alert-success"><p><strong>File:</strong> window.h</p></div><h2 id="結構">結構<a class="header-anchor" href="#結構">#</a></h2><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">rtgui_win</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="comment">/* inherit from container */</span></span><br><span class="line">    <span class="keyword">rtgui_container_t</span> parent;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* update count */</span></span><br><span class="line">    <span class="keyword">rt_base_t</span> update;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* drawing count */</span></span><br><span class="line">    <span class="keyword">rt_base_t</span> drawing;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_rect</span> <span class="title">drawing_rect</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* parent window. RT_NULL if the window is a top level window */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_win</span> *<span class="title">parent_window</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_region</span> <span class="title">outer_clip</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_rect</span> <span class="title">outer_extent</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* the widget that will grab the focus in current window */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_widget</span> *<span class="title">focused_widget</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* which app I belong */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_app</span> *<span class="title">app</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* window style */</span></span><br><span class="line">    <span class="keyword">rt_uint16_t</span> style;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* window state flag */</span></span><br><span class="line">    <span class="keyword">enum</span> rtgui_win_flag flag;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">rtgui_modal_code_t</span> modal_code;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* last mouse event handled widget */</span></span><br><span class="line">    <span class="keyword">rtgui_widget_t</span> *last_mevent_widget;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* window title */</span></span><br><span class="line">    <span class="keyword">char</span> *title;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_wintitle</span> *_<span class="title">title_wgt</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* call back */</span></span><br><span class="line">    <span class="keyword">rt_bool_t</span> (*on_activate)(struct rtgui_object *widget, struct rtgui_event *event);</span><br><span class="line">    <span class="keyword">rt_bool_t</span> (*on_deactivate)(struct rtgui_object *widget, struct rtgui_event *event);</span><br><span class="line">    <span class="keyword">rt_bool_t</span> (*on_close)(struct rtgui_object *widget, struct rtgui_event *event);</span><br><span class="line">    <span class="comment">/* the key is sent to the focused widget by default. If the focused widget</span></span><br><span class="line"><span class="comment">     * and all of it's parents didn't handle the key event, it will be handled</span></span><br><span class="line"><span class="comment">     * by @func on_key</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * If you want to handle key event on your own, it's better to overload</span></span><br><span class="line"><span class="comment">     * this function other than handle EVENT_KBD in event_handler.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">rt_bool_t</span> (*on_key)(struct rtgui_object *widget, struct rtgui_event *event);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* reserved user data */</span></span><br><span class="line">    <span class="keyword">void</span> *user_data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Private data. */</span></span><br><span class="line">    <span class="keyword">rt_base_t</span> (*_do_show)(struct rtgui_win *win);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* app ref_count */</span></span><br><span class="line">    <span class="keyword">rt_uint16_t</span> app_ref_count;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* win magic flag, magic value is 0xA5A55A5A */</span></span><br><span class="line">    <span class="keyword">rt_uint32_t</span>magic;</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="定義物件類型">定義物件類型<a class="header-anchor" href="#定義物件類型">#</a></h3><div class="alert alert-success"><p><strong>File:</strong> window.c</p></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">DEFINE_CLASS_TYPE(win, <span class="string">"win"</span>,</span><br><span class="line">                  RTGUI_PARENT_TYPE(container),</span><br><span class="line">                  _rtgui_win_constructor,</span><br><span class="line">                  _rtgui_win_destructor,</span><br><span class="line">                  <span class="keyword">sizeof</span>(struct rtgui_win));</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="建立視窗">建立視窗<a class="header-anchor" href="#建立視窗">#</a></h2><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>建立視窗</td><td>視窗指標</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*parent_window</code></th><th><code>*title</code></th><th><code>*rect</code></th><th><code>style</code></th></tr></thead><tbody><tr><td>上層視窗</td><td>視窗標題</td><td>視窗的大小</td><td>一些風格</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rtgui_win_t</span> *rtgui_win_create(struct rtgui_win *parent_window,</span><br><span class="line">                              <span class="keyword">const</span> <span class="keyword">char</span> *title,</span><br><span class="line">                              <span class="keyword">rtgui_rect_t</span> *rect,</span><br><span class="line">                              <span class="keyword">rt_uint16_t</span> style)</span><br><span class="line">{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_win</span> *<span class="title">win</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* allocate win memory */</span></span><br><span class="line">    win = RTGUI_WIN(rtgui_widget_create(RTGUI_WIN_TYPE));</span><br><span class="line">    <span class="keyword">if</span> (win == RT_NULL)</span><br><span class="line">        <span class="keyword">return</span> RT_NULL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rtgui_win_init(win, parent_window, title, rect, style) != <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        rtgui_widget_destroy(RTGUI_WIDGET(win));</span><br><span class="line">        <span class="keyword">return</span> RT_NULL;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> win;</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_create);</span><br></pre></td></tr></tbody></table></figure><p>透過 <code>rtgui_win_init</code> 完成設定</p><hr><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>初始化視窗</td><td>檢查碼</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>*parent_window</code></th><th><code>*title</code></th><th><code>*rect</code></th><th><code>style</code></th></tr></thead><tbody><tr><td>視窗本體</td><td>上層視窗</td><td>視窗標題</td><td>視窗的大小</td><td>一些風格</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rtgui_win_init</span><span class="params">(struct rtgui_win *win, struct rtgui_win *parent_window,</span></span></span><br><span class="line"><span class="function"><span class="params">                   <span class="keyword">const</span> <span class="keyword">char</span> *title,</span></span></span><br><span class="line"><span class="function"><span class="params">                   <span class="keyword">rtgui_rect_t</span> *rect,</span></span></span><br><span class="line"><span class="function"><span class="params">                   <span class="keyword">rt_uint16_t</span> style)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (win == RT_NULL) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* set parent window */</span></span><br><span class="line">    win-&gt;parent_window = parent_window;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* set title, rect and style */</span></span><br><span class="line">    <span class="keyword">if</span> (title != RT_NULL)</span><br><span class="line">        win-&gt;title = rt_strdup(title);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        win-&gt;title = RT_NULL;</span><br><span class="line"></span><br><span class="line">    rtgui_widget_set_rect(RTGUI_WIDGET(win), rect);</span><br><span class="line">    win-&gt;style = style;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!((style &amp; RTGUI_WIN_STYLE_NO_TITLE) &amp;&amp; (style &amp; RTGUI_WIN_STYLE_NO_BORDER)))</span><br><span class="line">    {</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_rect</span> <span class="title">trect</span> = *<span class="title">rect</span>;</span></span><br><span class="line"></span><br><span class="line">        win-&gt;_title_wgt = rtgui_wintitle_create(win);</span><br><span class="line">        <span class="keyword">if</span> (!win-&gt;_title_wgt)</span><br><span class="line">            <span class="keyword">goto</span> __on_err;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(style &amp; RTGUI_WIN_STYLE_NO_BORDER))</span><br><span class="line">        {</span><br><span class="line">            rtgui_rect_inflate(&amp;trect, WINTITLE_BORDER_SIZE);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (!(style &amp; RTGUI_WIN_STYLE_NO_TITLE))</span><br><span class="line">        {</span><br><span class="line">            trect.y1 -= WINTITLE_HEIGHT;</span><br><span class="line">        }</span><br><span class="line">        rtgui_widget_set_rect(RTGUI_WIDGET(win-&gt;_title_wgt), &amp;trect);</span><br><span class="line">        <span class="comment">/* Update the clip of the wintitle manually. */</span></span><br><span class="line">        rtgui_region_subtract_rect(&amp;(RTGUI_WIDGET(win-&gt;_title_wgt)-&gt;clip),</span><br><span class="line">                                   &amp;(RTGUI_WIDGET(win-&gt;_title_wgt)-&gt;clip),</span><br><span class="line">                                   &amp;(RTGUI_WIDGET(win)-&gt;extent));</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* The window title is always un-hidden for simplicity. */</span></span><br><span class="line">        rtgui_widget_show(RTGUI_WIDGET(win-&gt;_title_wgt));</span><br><span class="line">        rtgui_region_init_with_extents(&amp;win-&gt;outer_clip, &amp;trect);</span><br><span class="line">        win-&gt;outer_extent = trect;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        rtgui_region_init_with_extents(&amp;win-&gt;outer_clip, rect);</span><br><span class="line">        win-&gt;outer_extent = *rect;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_rtgui_win_create_in_server(win) == RT_FALSE)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">goto</span> __on_err;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    win-&gt;app-&gt;window_cnt++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">__on_err:</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_init);</span><br></pre></td></tr></tbody></table></figure><h3 id="建立主視窗">建立主視窗<a class="header-anchor" href="#建立主視窗">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>建立主視窗</td><td>視窗指標</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*parent_window</code></th><th><code>*title</code></th><th><code>style</code></th></tr></thead><tbody><tr><td>上層視窗</td><td>視窗標題</td><td>一些風格</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rtgui_win_t</span> *rtgui_mainwin_create(struct rtgui_win *parent_window, <span class="keyword">const</span> <span class="keyword">char</span> *title, <span class="keyword">rt_uint16_t</span> style)</span><br><span class="line">{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_rect</span> <span class="title">rect</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* get rect of main window */</span></span><br><span class="line">    rtgui_get_mainwin_rect(&amp;rect);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rtgui_win_create(parent_window, title, &amp;rect, style);</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_mainwin_create);</span><br></pre></td></tr></tbody></table></figure><p>建立一個固定大小的視窗，這個大小被設定在 <code>_mainwin_rect</code> 這個全域變數裡面，可以透過 <code>rtgui_get_mainwin_rect</code> 來取得這個值。</p><hr><h2 id="刪除視窗">刪除視窗<a class="header-anchor" href="#刪除視窗">#</a></h2><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*win</code></th></tr></thead><tbody><tr><td>刪除視窗</td><td>void</td><td>目標視窗</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_destroy</span><span class="params">(struct rtgui_win *win)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">/* close the window first if it's not. */</span></span><br><span class="line">    <span class="keyword">if</span> (!(win-&gt;flag &amp; RTGUI_WIN_FLAG_CLOSED))</span><br><span class="line">    {</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_win_close</span> <span class="title">eclose</span>;</span></span><br><span class="line"></span><br><span class="line">        RTGUI_EVENT_WIN_CLOSE_INIT(&amp;eclose);</span><br><span class="line">        eclose.wid = win;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (win-&gt;style &amp; RTGUI_WIN_STYLE_DESTROY_ON_CLOSE)</span><br><span class="line">        {</span><br><span class="line">            _rtgui_win_deal_close(win,</span><br><span class="line">                                  (struct rtgui_event *)&amp;eclose,</span><br><span class="line">                                  RT_TRUE);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            _rtgui_win_deal_close(win,</span><br><span class="line">                                  (struct rtgui_event *)&amp;eclose,</span><br><span class="line">                                  RT_TRUE);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;flag &amp; RTGUI_WIN_FLAG_MODAL)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">/* set the RTGUI_WIN_STYLE_DESTROY_ON_CLOSE flag so the window will be</span></span><br><span class="line"><span class="comment">         * destroyed after the event_loop */</span></span><br><span class="line">        win-&gt;style |= RTGUI_WIN_STYLE_DESTROY_ON_CLOSE;</span><br><span class="line">        rtgui_win_end_modal(win, RTGUI_MODAL_CANCEL);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        rtgui_widget_destroy(RTGUI_WIDGET(win));</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_destroy);</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="關閉視窗">關閉視窗<a class="header-anchor" href="#關閉視窗">#</a></h2><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*win</code></th></tr></thead><tbody><tr><td>關閉視窗</td><td>void</td><td>目標視窗</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* send a close event to myself to get a consistent behavior */</span></span><br><span class="line"><span class="keyword">rt_bool_t</span> rtgui_win_close(struct rtgui_win *win)</span><br><span class="line">{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_win_close</span> <span class="title">eclose</span>;</span></span><br><span class="line"></span><br><span class="line">    RTGUI_EVENT_WIN_CLOSE_INIT(&amp;eclose);</span><br><span class="line">    eclose.wid = win;</span><br><span class="line">    <span class="keyword">return</span> _rtgui_win_deal_close(win,</span><br><span class="line">                                 (struct rtgui_event *)&amp;eclose,</span><br><span class="line">                                 RT_FALSE);</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_close);</span><br></pre></td></tr></tbody></table></figure><p>使用 <code>_rtgui_win_deal_close</code> 完成關閉動作</p><hr><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>刪除視窗</td><td>void</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>*event</code></th><th><code>force_close</code></th></tr></thead><tbody><tr><td>目標視窗</td><td>關閉事件</td><td>是否要強致關閉</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">rt_bool_t</span> _rtgui_win_deal_close(struct rtgui_win *win,</span><br><span class="line">                                       struct rtgui_event *event,</span><br><span class="line">                                       <span class="keyword">rt_bool_t</span> force_close)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (win-&gt;on_close != RT_NULL)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> ((win-&gt;on_close(RTGUI_OBJECT(win), event) == RT_FALSE) &amp;&amp; !force_close)</span><br><span class="line">            <span class="keyword">return</span> RT_FALSE;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    rtgui_win_hide(win);</span><br><span class="line"></span><br><span class="line">    win-&gt;flag |= RTGUI_WIN_FLAG_CLOSED;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;flag &amp; RTGUI_WIN_FLAG_MODAL)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">/* rtgui_win_end_modal cleared the RTGUI_WIN_FLAG_MODAL in win-&gt;flag so</span></span><br><span class="line"><span class="comment">         * we have to record it. */</span></span><br><span class="line">        rtgui_win_end_modal(win, RTGUI_MODAL_CANCEL);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    win-&gt;app-&gt;window_cnt--;</span><br><span class="line">    <span class="keyword">if</span> (win-&gt;app-&gt;window_cnt == <span class="number">0</span> &amp;&amp; !(win-&gt;app-&gt;state_flag &amp; RTGUI_APP_FLAG_KEEP))</span><br><span class="line">    {</span><br><span class="line">        rtgui_app_exit(rtgui_app_self(), <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;style &amp; RTGUI_WIN_STYLE_DESTROY_ON_CLOSE)</span><br><span class="line">    {</span><br><span class="line">        rtgui_win_destroy(win);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> RT_TRUE;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="設定視窗">設定視窗<a class="header-anchor" href="#設定視窗">#</a></h2><h3 id="大小">大小<a class="header-anchor" href="#大小">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>設定視窗大小</td><td>void</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>*rect</code></th></tr></thead><tbody><tr><td>視窗本體</td><td>新大小</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_set_rect</span><span class="params">(<span class="keyword">rtgui_win_t</span> *win, <span class="keyword">rtgui_rect_t</span> *rect)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_win_resize</span> <span class="title">event</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win == RT_NULL || rect == RT_NULL) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    RTGUI_WIDGET(win)-&gt;extent = *rect;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;flag &amp; RTGUI_WIN_FLAG_CONNECTED)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">/* set window resize event to server */</span></span><br><span class="line">        RTGUI_EVENT_WIN_RESIZE_INIT(&amp;event);</span><br><span class="line">        event.wid = win;</span><br><span class="line">        event.rect = *rect;</span><br><span class="line"></span><br><span class="line">        rtgui_server_post_event(&amp;(event.parent), <span class="keyword">sizeof</span>(struct rtgui_event_win_resize));</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_set_rect);</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="OnActive-函式">OnActive 函式<a class="header-anchor" href="#OnActive-函式">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>設定 OnActive 函式</td><td>void</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>handler</code></th></tr></thead><tbody><tr><td>視窗本體</td><td>OnActive 函式</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_set_onactivate</span><span class="params">(<span class="keyword">rtgui_win_t</span> *win, rtgui_event_handler_ptr handler)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (win != RT_NULL)</span><br><span class="line">    {</span><br><span class="line">        win-&gt;on_activate = handler;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_set_onactivate);</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="OnDeactive-函式">OnDeactive 函式<a class="header-anchor" href="#OnDeactive-函式">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>設定 OnDeactive 函式</td><td>void</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>handler</code></th></tr></thead><tbody><tr><td>視窗本體</td><td>OnDeactive 函式</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_set_ondeactivate</span><span class="params">(<span class="keyword">rtgui_win_t</span> *win, rtgui_event_handler_ptr handler)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (win != RT_NULL)</span><br><span class="line">    {</span><br><span class="line">        win-&gt;on_deactivate = handler;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_set_ondeactivate);</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="OnClose-函式">OnClose 函式<a class="header-anchor" href="#OnClose-函式">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>設定 OnClose 函式</td><td>void</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>handler</code></th></tr></thead><tbody><tr><td>視窗本體</td><td>OnClose 函式</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_set_onclose</span><span class="params">(<span class="keyword">rtgui_win_t</span> *win, rtgui_event_handler_ptr handler)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (win != RT_NULL)</span><br><span class="line">    {</span><br><span class="line">        win-&gt;on_close = handler;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_set_onclose);</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="OnKey">OnKey<a class="header-anchor" href="#OnKey">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>設定 OnKey 函式</td><td>void</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>handler</code></th></tr></thead><tbody><tr><td>視窗本體</td><td>OnKey 函式</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_set_onkey</span><span class="params">(<span class="keyword">rtgui_win_t</span> *win, rtgui_event_handler_ptr handler)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (win != RT_NULL)</span><br><span class="line">    {</span><br><span class="line">        win-&gt;on_key = handler;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_set_onkey);</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="視窗的行為">視窗的行為<a class="header-anchor" href="#視窗的行為">#</a></h2><h3 id="動態模式">動態模式<a class="header-anchor" href="#動態模式">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*win</code></th></tr></thead><tbody><tr><td>進入動態模式</td><td>檢查碼</td><td>視窗本體</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rt_base_t</span> rtgui_win_enter_modal(struct rtgui_win *win)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">rt_base_t</span> exit_code = <span class="number">-1</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_win_modal_enter</span> <span class="title">emodal</span>;</span></span><br><span class="line"></span><br><span class="line">    RTGUI_EVENT_WIN_MODAL_ENTER_INIT(&amp;emodal);</span><br><span class="line">    emodal.wid = win;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rtgui_server_post_event_sync((struct rtgui_event *)&amp;emodal,</span><br><span class="line">                                     <span class="keyword">sizeof</span>(emodal)) != RT_EOK)</span><br><span class="line">        <span class="keyword">return</span> exit_code;</span><br><span class="line"></span><br><span class="line">    win-&gt;flag |= RTGUI_WIN_FLAG_MODAL;</span><br><span class="line">    win-&gt;app_ref_count = win-&gt;app-&gt;ref_count + <span class="number">1</span>;</span><br><span class="line">    exit_code = rtgui_app_run(win-&gt;app);</span><br><span class="line">    win-&gt;flag &amp;= ~RTGUI_WIN_FLAG_MODAL;</span><br><span class="line"></span><br><span class="line">    rtgui_win_hide(win);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> exit_code;</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_enter_modal);</span><br></pre></td></tr></tbody></table></figure><hr><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>離開動態模式</td><td>檢查碼</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>modal_code</code></th></tr></thead><tbody><tr><td>視窗本體</td><td>動態模式編號</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_end_modal</span><span class="params">(struct rtgui_win *win, <span class="keyword">rtgui_modal_code_t</span> modal_code)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (win == RT_NULL || !(win-&gt;flag &amp; RTGUI_WIN_FLAG_MODAL))</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (win-&gt;app_ref_count &lt; win-&gt;app-&gt;ref_count)</span><br><span class="line">    {</span><br><span class="line">        rtgui_app_exit(win-&gt;app, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        i ++;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= <span class="number">1000</span>)</span><br><span class="line">        {</span><br><span class="line">            rt_kprintf(<span class="string">" =*=&gt; rtgui_win_end_modal while (win-&gt;app_ref_count &lt; win-&gt;app-&gt;ref_count) \n"</span>);</span><br><span class="line">            RT_ASSERT(<span class="number">0</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    rtgui_app_exit(win-&gt;app, modal_code);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* remove modal mode */</span></span><br><span class="line">    win-&gt;flag &amp;= ~RTGUI_WIN_FLAG_MODAL;</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_end_modal);</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="現身">現身<a class="header-anchor" href="#現身">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>現身該視窗</td><td>檢查碼</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>is_modal</code></th></tr></thead><tbody><tr><td>視窗本體</td><td>是否為動態模式</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rt_base_t</span> rtgui_win_show(struct rtgui_win *win, <span class="keyword">rt_bool_t</span> is_modal)</span><br><span class="line">{</span><br><span class="line">    RTGUI_WIDGET_UNHIDE(win);</span><br><span class="line"></span><br><span class="line">    win-&gt;magic = RTGUI_WIN_MAGIC;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (is_modal)</span><br><span class="line">        win-&gt;flag |= RTGUI_WIN_FLAG_MODAL;</span><br><span class="line">    <span class="keyword">if</span> (win-&gt;_do_show)</span><br><span class="line">        <span class="keyword">return</span> win-&gt;_do_show(win);</span><br><span class="line">    <span class="keyword">return</span> rtgui_win_do_show(win);</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_show);</span><br></pre></td></tr></tbody></table></figure><p>如果視窗本身有設定 <code>_do_show</code> 函式的話，則呼叫本身的；否則呼叫 <code>rtgui_win_do_show</code></p><hr><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*win</code></th></tr></thead><tbody><tr><td>視窗現身</td><td>檢查碼</td><td>視窗本體</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rt_base_t</span> rtgui_win_do_show(struct rtgui_win *win)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">rt_base_t</span> exit_code = <span class="number">-1</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_app</span> *<span class="title">app</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_win_show</span> <span class="title">eshow</span>;</span></span><br><span class="line"></span><br><span class="line">    RTGUI_EVENT_WIN_SHOW_INIT(&amp;eshow);</span><br><span class="line">    eshow.wid = win;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win == RT_NULL)</span><br><span class="line">        <span class="keyword">return</span> exit_code;</span><br><span class="line"></span><br><span class="line">    win-&gt;flag &amp;= ~RTGUI_WIN_FLAG_CLOSED;</span><br><span class="line">    win-&gt;flag &amp;= ~RTGUI_WIN_FLAG_CB_PRESSED;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* if it does not register into server, create it in server */</span></span><br><span class="line">    <span class="keyword">if</span> (!(win-&gt;flag &amp; RTGUI_WIN_FLAG_CONNECTED))</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (_rtgui_win_create_in_server(win) == RT_FALSE)</span><br><span class="line">            <span class="keyword">return</span> exit_code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* set window unhidden before notify the server */</span></span><br><span class="line">    rtgui_widget_show(RTGUI_WIDGET(win));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rtgui_server_post_event_sync(RTGUI_EVENT(&amp;eshow),</span><br><span class="line">                                     <span class="keyword">sizeof</span>(struct rtgui_event_win_show)) != RT_EOK)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">/* It could not be shown if a parent window is hidden. */</span></span><br><span class="line">        rtgui_widget_hide(RTGUI_WIDGET(win));</span><br><span class="line">        <span class="keyword">return</span> exit_code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;focused_widget == RT_NULL)</span><br><span class="line">        rtgui_widget_focus(RTGUI_WIDGET(win));</span><br><span class="line"></span><br><span class="line">    app = win-&gt;app;</span><br><span class="line">    RT_ASSERT(app != RT_NULL);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* set main window */</span></span><br><span class="line">    <span class="keyword">if</span> (app-&gt;main_object == RT_NULL)</span><br><span class="line">        rtgui_app_set_main_win(app, win);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;flag &amp; RTGUI_WIN_FLAG_MODAL)</span><br><span class="line">    {</span><br><span class="line">        exit_code = rtgui_win_enter_modal(win);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> exit_code;</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_do_show);</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="隱藏">隱藏<a class="header-anchor" href="#隱藏">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*win</code></th></tr></thead><tbody><tr><td>隱藏視窗</td><td>檢查碼</td><td>視窗本體</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_hide</span><span class="params">(struct rtgui_win *win)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    RT_ASSERT(win != RT_NULL);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!RTGUI_WIDGET_IS_HIDE(win) &amp;&amp;</span><br><span class="line">            win-&gt;flag &amp; RTGUI_WIN_FLAG_CONNECTED)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">/* send hidden message to server */</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_win_hide</span> <span class="title">ehide</span>;</span></span><br><span class="line">        RTGUI_EVENT_WIN_HIDE_INIT(&amp;ehide);</span><br><span class="line">        ehide.wid = win;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rtgui_server_post_event_sync(RTGUI_EVENT(&amp;ehide),</span><br><span class="line">                                         <span class="keyword">sizeof</span>(struct rtgui_event_win_hide)) != RT_EOK)</span><br><span class="line">        {</span><br><span class="line">            rt_kprintf(<span class="string">"hide win: %s failed\n"</span>, win-&gt;title);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        rtgui_widget_hide(RTGUI_WIDGET(win));</span><br><span class="line">        win-&gt;flag &amp;= ~RTGUI_WIN_FLAG_ACTIVATE;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_hide);</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="啟動">啟動<a class="header-anchor" href="#啟動">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*win</code></th></tr></thead><tbody><tr><td>啟動視窗</td><td>檢查碼</td><td>視窗本體</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rt_err_t</span> rtgui_win_activate(struct rtgui_win *win)</span><br><span class="line">{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_win_activate</span> <span class="title">eact</span>;</span></span><br><span class="line">    RTGUI_EVENT_WIN_ACTIVATE_INIT(&amp;eact);</span><br><span class="line">    eact.wid = win;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rtgui_server_post_event_sync(RTGUI_EVENT(&amp;eact),</span><br><span class="line">                                        <span class="keyword">sizeof</span>(eact));</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_activate);</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="移動">移動<a class="header-anchor" href="#移動">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>進入動態模式</td><td>檢查碼</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*win</code></th><th><code>x</code></th><th><code>y</code></th></tr></thead><tbody><tr><td>視窗本體</td><td>目標 x</td><td>目標 y</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_move</span><span class="params">(struct rtgui_win *win, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_widget</span> *<span class="title">wgt</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_win_move</span> <span class="title">emove</span>;</span></span><br><span class="line">    <span class="keyword">int</span> dx, dy;</span><br><span class="line">    RTGUI_EVENT_WIN_MOVE_INIT(&amp;emove);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win == RT_NULL)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;_title_wgt)</span><br><span class="line">    {</span><br><span class="line">        wgt = RTGUI_WIDGET(win-&gt;_title_wgt);</span><br><span class="line">        dx = x - wgt-&gt;extent.x1;</span><br><span class="line">        dy = y - wgt-&gt;extent.y1;</span><br><span class="line">        rtgui_widget_move_to_logic(wgt, dx, dy);</span><br><span class="line"></span><br><span class="line">        wgt = RTGUI_WIDGET(win);</span><br><span class="line">        rtgui_widget_move_to_logic(wgt, dx, dy);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        wgt = RTGUI_WIDGET(win);</span><br><span class="line">        dx = x - wgt-&gt;extent.x1;</span><br><span class="line">        dy = y - wgt-&gt;extent.y1;</span><br><span class="line">        rtgui_widget_move_to_logic(wgt, dx, dy);</span><br><span class="line">    }</span><br><span class="line">    rtgui_rect_move(&amp;win-&gt;outer_extent, dx, dy);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;flag &amp; RTGUI_WIN_FLAG_CONNECTED)</span><br><span class="line">    {</span><br><span class="line">        rtgui_widget_hide(RTGUI_WIDGET(win));</span><br><span class="line"></span><br><span class="line">        emove.wid   = win;</span><br><span class="line">        emove.x     = x;</span><br><span class="line">        emove.y     = y;</span><br><span class="line">        <span class="keyword">if</span> (rtgui_server_post_event_sync(RTGUI_EVENT(&amp;emove),</span><br><span class="line">                                         <span class="keyword">sizeof</span>(struct rtgui_event_win_move)) != RT_EOK)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    rtgui_widget_show(RTGUI_WIDGET(win));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_move);</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="OnDraw">OnDraw<a class="header-anchor" href="#OnDraw">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*win</code></th></tr></thead><tbody><tr><td>OnDraw</td><td>boolean</td><td>視窗本體</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> rt_bool_t <span class="title">rtgui_win_ondraw</span><span class="params">(struct rtgui_win *win)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc</span> *<span class="title">dc</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_rect</span> <span class="title">rect</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_paint</span> <span class="title">event</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* begin drawing */</span></span><br><span class="line">    dc = rtgui_dc_begin_drawing(RTGUI_WIDGET(win));</span><br><span class="line">    <span class="keyword">if</span> (dc == RT_NULL)</span><br><span class="line">        <span class="keyword">return</span> RT_FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* get window rect */</span></span><br><span class="line">    rtgui_widget_get_rect(RTGUI_WIDGET(win), &amp;rect);</span><br><span class="line">    <span class="comment">/* fill area */</span></span><br><span class="line">    rtgui_dc_fill_rect(dc, &amp;rect);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* widget drawing */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* paint each widget */</span></span><br><span class="line">    RTGUI_EVENT_PAINT_INIT(&amp;event);</span><br><span class="line">    event.wid = RT_NULL;</span><br><span class="line"></span><br><span class="line">    rtgui_container_dispatch_event(RTGUI_CONTAINER(win),</span><br><span class="line">                                   (<span class="keyword">rtgui_event_t</span> *)&amp;event);</span><br><span class="line"></span><br><span class="line">    rtgui_dc_end_drawing(dc, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> RT_FALSE;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="更新重疊區域">更新重疊區域<a class="header-anchor" href="#更新重疊區域">#</a></h3><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th><th><code>*win</code></th></tr></thead><tbody><tr><td>更新重疊區域</td><td>void</td><td>視窗本體</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rtgui_win_update_clip</span><span class="params">(struct rtgui_win *win)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_container</span> *<span class="title">cnt</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_list_node</span> *<span class="title">node</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win == RT_NULL)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;flag &amp; RTGUI_WIN_FLAG_CLOSED)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (win-&gt;_title_wgt)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">/* Reset the inner clip of title. */</span></span><br><span class="line">        RTGUI_WIDGET(win-&gt;_title_wgt)-&gt;extent = win-&gt;outer_extent;</span><br><span class="line">        rtgui_region_copy(&amp;RTGUI_WIDGET(win-&gt;_title_wgt)-&gt;clip, &amp;win-&gt;outer_clip);</span><br><span class="line">        rtgui_region_subtract_rect(&amp;RTGUI_WIDGET(win-&gt;_title_wgt)-&gt;clip,</span><br><span class="line">                                   &amp;RTGUI_WIDGET(win-&gt;_title_wgt)-&gt;clip,</span><br><span class="line">                                   &amp;RTGUI_WIDGET(win)-&gt;extent);</span><br><span class="line">        <span class="comment">/* Reset the inner clip of window. */</span></span><br><span class="line">        rtgui_region_intersect_rect(&amp;RTGUI_WIDGET(win)-&gt;clip,</span><br><span class="line">                                    &amp;win-&gt;outer_clip,</span><br><span class="line">                                    &amp;RTGUI_WIDGET(win)-&gt;extent);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        RTGUI_WIDGET(win)-&gt;extent = win-&gt;outer_extent;</span><br><span class="line">        rtgui_region_copy(&amp;RTGUI_WIDGET(win)-&gt;clip, &amp;win-&gt;outer_clip);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* update the clip info of each child */</span></span><br><span class="line">    cnt = RTGUI_CONTAINER(win);</span><br><span class="line">    rtgui_list_foreach(node, &amp;(cnt-&gt;children))</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">rtgui_widget_t</span> *child = rtgui_list_entry(node, <span class="keyword">rtgui_widget_t</span>, sibling);</span><br><span class="line"></span><br><span class="line">        rtgui_widget_update_clip(child);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_update_clip);</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="Event-Handler">Event Handler<a class="header-anchor" href="#Event-Handler">#</a></h2><p>此 event handler 也就是 window 的函式進入點</p><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th>功能</th><th>回傳值</th></tr></thead><tbody><tr><td>window 函式進入點</td><td>boolean</td></tr></tbody></table></div><div class="table-responsive"><table class="table table-bordered table-striped"><thead><tr><th><code>*object</code></th><th><code>*event</code></th></tr></thead><tbody><tr><td>物件本體</td><td>行為本體</td></tr></tbody></table></div><figure class="highlight c line-number"><table><tbody><tr><td class="gutter"><pre><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rt_bool_t</span> rtgui_win_event_handler(struct rtgui_object *object, struct rtgui_event *event)</span><br><span class="line">{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_win</span> *<span class="title">win</span>;</span></span><br><span class="line"></span><br><span class="line">    RT_ASSERT(object != RT_NULL);</span><br><span class="line">    RT_ASSERT(event != RT_NULL);</span><br><span class="line"></span><br><span class="line">    win = RTGUI_WIN(object);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (event-&gt;type)</span><br><span class="line">    {</span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_WIN_SHOW:</span><br><span class="line">        rtgui_win_do_show(win);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_WIN_HIDE:</span><br><span class="line">        rtgui_win_hide(win);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_WIN_CLOSE:</span><br><span class="line">        _rtgui_win_deal_close(win, event, RT_FALSE);</span><br><span class="line">        <span class="comment">/* don't broadcast WIN_CLOSE event to others */</span></span><br><span class="line">        <span class="keyword">return</span> RT_TRUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_WIN_MOVE:</span><br><span class="line">    {</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_win_move</span> *<span class="title">emove</span> = (<span class="title">struct</span> <span class="title">rtgui_event_win_move</span> *)<span class="title">event</span>;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/* move window */</span></span><br><span class="line">        rtgui_win_move(win, emove-&gt;x, emove-&gt;y);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_WIN_ACTIVATE:</span><br><span class="line">        <span class="keyword">if</span> (win-&gt;flag &amp; RTGUI_WIN_FLAG_UNDER_MODAL ||</span><br><span class="line">                RTGUI_WIDGET_IS_HIDE(win))</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">/* activate a hide window */</span></span><br><span class="line">            <span class="keyword">return</span> RT_TRUE;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        win-&gt;flag |= RTGUI_WIN_FLAG_ACTIVATE;</span><br><span class="line">        <span class="comment">/* There are many cases where the paint event will follow this activate</span></span><br><span class="line"><span class="comment">         * event and just repaint the title is not a big deal. So just repaint</span></span><br><span class="line"><span class="comment">         * the title if there is one. If you want to update the content of the</span></span><br><span class="line"><span class="comment">         * window, do it in the on_activate callback.*/</span></span><br><span class="line">        <span class="keyword">if</span> (win-&gt;_title_wgt)</span><br><span class="line">            rtgui_widget_update(RTGUI_WIDGET(win-&gt;_title_wgt));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (win-&gt;on_activate != RT_NULL)</span><br><span class="line">        {</span><br><span class="line">            win-&gt;on_activate(RTGUI_OBJECT(object), event);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_WIN_DEACTIVATE:</span><br><span class="line">        win-&gt;flag &amp;= ~RTGUI_WIN_FLAG_ACTIVATE;</span><br><span class="line">        <span class="comment">/* No paint event follow the deactive event. So we have to update</span></span><br><span class="line"><span class="comment">         * the title manually to reflect the change. */</span></span><br><span class="line">        <span class="keyword">if</span> (win-&gt;_title_wgt)</span><br><span class="line">            rtgui_widget_update(RTGUI_WIDGET(win-&gt;_title_wgt));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (win-&gt;on_deactivate != RT_NULL)</span><br><span class="line">            win-&gt;on_deactivate(RTGUI_OBJECT(object), event);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_WIN_UPDATE_END:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_CLIP_INFO:</span><br><span class="line">        <span class="comment">/* update win clip */</span></span><br><span class="line">        rtgui_win_update_clip(win);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_PAINT:</span><br><span class="line">        <span class="keyword">if</span> (win-&gt;_title_wgt)</span><br><span class="line">            rtgui_widget_update(RTGUI_WIDGET(win-&gt;_title_wgt));</span><br><span class="line">        rtgui_win_ondraw(win);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> GUIENGIN_USING_VFRAMEBUFFER</span></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_VPAINT_REQ:</span><br><span class="line">    {</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_vpaint_req</span> *<span class="title">req</span> = (<span class="title">struct</span> <span class="title">rtgui_event_vpaint_req</span> *)<span class="title">event</span>;</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_dc</span> *<span class="title">dc</span>;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/* get drawing dc */</span></span><br><span class="line">        dc = rtgui_win_get_drawing(win);</span><br><span class="line"></span><br><span class="line">        req-&gt;sender-&gt;buffer = dc;</span><br><span class="line">        rt_completion_done(req-&gt;sender-&gt;cmp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_MOUSE_BUTTON:</span><br><span class="line">    {</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_event_mouse</span> *<span class="title">emouse</span> = (<span class="title">struct</span> <span class="title">rtgui_event_mouse</span>*)<span class="title">event</span>;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rtgui_rect_contains_point(&amp;RTGUI_WIDGET(win)-&gt;extent,</span><br><span class="line">                                      emouse-&gt;x, emouse-&gt;y) == RT_EOK)</span><br><span class="line">            <span class="keyword">return</span> _win_handle_mouse_btn(win, event);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (win-&gt;_title_wgt)</span><br><span class="line">        {</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_object</span> *<span class="title">tobj</span> = <span class="title">RTGUI_OBJECT</span>(<span class="title">win</span>-&gt;_<span class="title">title_wgt</span>);</span></span><br><span class="line">            <span class="keyword">return</span> tobj-&gt;event_handler(tobj, event);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_MOUSE_MOTION:</span><br><span class="line">        <span class="keyword">return</span> rtgui_container_dispatch_mouse_event(RTGUI_CONTAINER(win),</span><br><span class="line">                (struct rtgui_event_mouse *)event);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_KBD:</span><br><span class="line">        <span class="comment">/* we should dispatch key event firstly */</span></span><br><span class="line">        <span class="keyword">if</span> (!(win-&gt;flag &amp; RTGUI_WIN_FLAG_HANDLE_KEY))</span><br><span class="line">        {</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">rtgui_widget</span> *<span class="title">widget</span>;</span></span><br><span class="line">            <span class="keyword">rt_bool_t</span> res = RT_FALSE;</span><br><span class="line">            <span class="comment">/* we should dispatch the key event just once. Once entered the</span></span><br><span class="line"><span class="comment">             * dispatch mode, we should swtich to key handling mode. */</span></span><br><span class="line">            win-&gt;flag |= RTGUI_WIN_FLAG_HANDLE_KEY;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* dispatch the key event */</span></span><br><span class="line">            <span class="keyword">for</span> (widget = win-&gt;focused_widget;</span><br><span class="line">                    widget &amp;&amp; !res;</span><br><span class="line">                    widget = widget-&gt;parent)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (RTGUI_OBJECT(widget)-&gt;event_handler != RT_NULL)</span><br><span class="line">                    res = RTGUI_OBJECT(widget)-&gt;event_handler(</span><br><span class="line">                              RTGUI_OBJECT(widget), event);</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            win-&gt;flag &amp;= ~RTGUI_WIN_FLAG_HANDLE_KEY;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="comment">/* in key handling mode(it may reach here in</span></span><br><span class="line"><span class="comment">             * win-&gt;focused_widget-&gt;event_handler call) */</span></span><br><span class="line">            <span class="keyword">if</span> (win-&gt;on_key != RT_NULL)</span><br><span class="line">                <span class="keyword">return</span> win-&gt;on_key(RTGUI_OBJECT(win), event);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> RTGUI_EVENT_COMMAND:</span><br><span class="line">        <span class="keyword">if</span> (rtgui_container_dispatch_event(RTGUI_CONTAINER(object), event) != RT_TRUE)</span><br><span class="line">        {</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> RT_TRUE;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> rtgui_container_event_handler(object, event);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> RT_FALSE;</span><br><span class="line">}</span><br><span class="line">RTM_EXPORT(rtgui_win_event_handler);</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;div class=&quot;alert alert-success&quot;&gt;&lt;p&gt;&lt;stro
      
    
    </summary>
    
    
      <category term="RT-Thread GUI" scheme="https://blog.lusw.dev/categories/RT-Thread-GUI/"/>
    
    
      <category term="RT-Thread" scheme="https://blog.lusw.dev/tags/RT-Thread/"/>
    
      <category term="GUI" scheme="https://blog.lusw.dev/tags/GUI/"/>
    
      <category term="window" scheme="https://blog.lusw.dev/tags/window/"/>
    
  </entry>
  
</feed>
